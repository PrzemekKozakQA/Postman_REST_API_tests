{
	"info": {
		"_postman_id": "cd1e8df9-da2b-4583-80bf-17313fbb368b",
		"name": "GAD - tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "authentication",
			"item": [
				{
					"name": "Login - positive",
					"item": [
						{
							"name": "Login as user to receive token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											"let responseData;\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is in JSON format\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    responseData = pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Response has the required field - access_token\", function () {\r",
											"    pm.expect(responseData.access_token).to.exist;\r",
											"    //or\r",
											"    pm.expect(responseData).has.property('access_token')\r",
											"});\r",
											"\r",
											"pm.test(\"Data type of field - access_token is a string\", function () {\r",
											"    pm.expect(responseData.access_token).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"access_token is a non-empty string\", function () {\r",
											"    pm.expect(responseData.access_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    pm.environment.set('token', responseData.access_token);\r",
											"\r",
											"    //import 'Moment' library\r",
											"    const moment = require('moment');\r",
											"    //setting the exact moment of generating a new token\r",
											"    pm.environment.set('token_generation_moment', moment())\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b64e4e0-eb27-4e37-b969-fcbe50f9bab7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "5f071182-1821-4a68-9a6e-8d35be9451a4",
									"name": "Login as user to receive token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 31 Aug 2023 08:15:09 GMT"
										},
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7ff3d2f3ed6534b8-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bf-TQgzhcSg1Hinj1IpjBsk0r9pjho\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"access_token\": \"example-of-token\"\n}"
								}
							]
						}
					],
					"id": "b6a117e7-8fff-43d8-a7c0-3608edeaaf0c"
				},
				{
					"name": "Login - negative",
					"item": [
						{
							"name": "incorrect email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "58bb5a57-b0bf-4ff7-b2aa-8257b10b279d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Wrong-user\",\n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "f75024e1-922d-4209-a836-cfae30ea1095",
									"name": "incorrect user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Wrong-user\",\n    \"password\": \"{{userPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 31 Aug 2023 09:56:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7ff467d65feec019-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "incorrect password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "619e9371-a8e8-4421-9bdd-2b60688a1ded",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"wrong-password\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "174368cf-a22f-4f84-b3ad-587170ae8cdb",
									"name": "invalid password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"wrong-password\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 31 Aug 2023 09:37:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7ff44af36adafc67-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "empty email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8fbba8f1-0ad7-4415-9c4f-e3c258c83176",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "25172970-1903-4255-9920-ae14eefa0665",
									"name": "empty e-mail",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"password\": \"{{userPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:01:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800eddb048303482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "empty password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "212edb0e-f5d9-4710-8e95-3e90cf4a3d02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "7e50ad35-3173-4a3f-bdf3-139430e142b9",
									"name": "empty password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:03:44 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ee195efb63482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "no password property",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7d01c82e-e871-49e0-8fbc-f6bae8790880",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "800a272e-2337-466c-bee2-b6009c71cae6",
									"name": "empty password Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:04:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ee3487a0d3482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "no login property",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c526f9af-642e-47b4-b8b1-ffff52c4f652",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "3a368c20-4918-43b7-ad9a-6c98b01a27c8",
									"name": "no login property",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"{{userPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:06:17 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ee554ebe03482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "wrong data type in login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7003bc33-c31f-419f-b6e6-d0e4ad6ba7d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": true,\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "2c827fec-08cd-488d-817c-262b24ebb157",
									"name": "wrong data type in login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"login\": true,\r\n    \"password\": \"{{userPassword}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:13:32 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800eeff40ab83482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "wrong data type in password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e87267ae-e620-4de9-b80e-8371943264de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"{{userEmail}}\",\r\n    \"password\": true\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "5ba6ec18-394d-4151-953e-36fd2e98eb7f",
									"name": "wrong data type in password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"login\": \"{{userEmail}}\",\r\n    \"password\": true\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:19:08 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ef8254f633482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "no body in request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "49f2a25a-d1a0-4d48-b54a-6297445ca048",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "146633d9-4f61-481a-bfc2-f91c1702542a",
									"name": "no body in request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:08:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ee7f57b583482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "empty json in body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1a702177-cac9-430d-9c34-f48554d16fcd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "991b6871-bfa5-4fd9-a817-56ed90ed90cc",
									"name": "empty json in body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:08:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800ee9301b913482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "list in body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ae013a-518d-4fa9-ab7a-74e1de37e080",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "18b7b946-dbcf-482e-a6a6-719504b46333",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"login\": \"{{userEmail}}\",\r\n        \"password\": \"{{userPassword}}\"\r\n    },\r\n    {\r\n        \"login\": \"newUser\",\r\n        \"password\": \"NewPassword\"\r\n    }\r\n]"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "96096d5d-e45d-46af-a567-6dcd6233698a",
									"name": "list in body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"login\": \"{{userEmail}}\",\r\n        \"password\": \"{{userPassword}}\"\r\n    },\r\n    {\r\n        \"login\": \"newUser\",\r\n        \"password\": \"NewPassword\"\r\n    }\r\n]"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:11:23 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800eeccb98a13482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "login with xml in body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "50e0141c-007b-4bf2-87a1-45574c9c4f4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/xml"
									},
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n<email>{{userEmail}}</email>\n<password>{{userPassword}}</password>",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "xml"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "593078f6-3360-4200-825d-12f2625fa75c",
									"name": "login with xml in body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/xml"
											},
											{
												"key": "Accept",
												"value": "application/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\n<login>{{userEmail}}</login>\n<password>{{userPassword}}</password>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "xml"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:33:30 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f0d33ad953482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
								}
							]
						},
						{
							"name": "Send request with Content-Type header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "427fe164-7589-4085-9df2-7b6aad1bcda0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "0fd49010-4d1f-4ec4-98de-d42bd869d219",
									"name": "Login as user to receive token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"{{userPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 31 Aug 2023 08:15:09 GMT"
										},
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7ff3d2f3ed6534b8-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bf-TQgzhcSg1Hinj1IpjBsk0r9pjho\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"access_token\": \"example-of-token\"\n}"
								}
							]
						}
					],
					"id": "6af74126-034a-4066-ad04-9bb8c3d7cd1e",
					"description": "> incorrect login, password \n  \n> correct login, incorrect password \n  \n> empty login, corect password \n  \n> correct login, empty password \n  \n> correct login, no password property \n  \n> no login property, password \n  \n> empty body (none) \n  \n> empty json in body \n  \n> LIST in body \n  \n> wrong data type in login \n  \n> wrong data type in password \n  \n> request with xml \n  \n> broken json body \n  \n\nnot allowed method\n\n> Wrong header",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8f5f28d2-0975-4664-887f-e467aabe1f0e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "90af4667-2103-4c5b-a448-30bc113aa95b",
								"type": "text/javascript",
								"exec": [
									"let responseData;",
									"",
									"const Responseschema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"status\": {",
									"            \"type\": \"integer\", nullable: false",
									"        },",
									"        \"message\": {",
									"            \"type\": \"string\", nullable: false",
									"        }",
									"    },",
									"    \"required\": [\"status\", \"message\"]",
									"};",
									"",
									"pm.test(\"Response status code should be 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response is in JSON format\", function () {",
									"    pm.response.to.be.json;",
									"    responseData = pm.response.json()",
									"});",
									"",
									"pm.test(\"Response has valid schema\", function () {",
									"    pm.response.to.has.jsonSchema(Responseschema)",
									"});",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    pm.expect(responseData.message).to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "login with broken body - negative",
					"item": [
						{
							"name": "broken json",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2a7d5f9d-8343-4b2e-91c7-fd52e9a818df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": {{userPassword}}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "f2f3f6db-0859-43fd-a52a-9c6c49d4e01b",
									"name": "broken json",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": {{userPassword}}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:24:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f009afb1b3482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'none'"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Error</title>\n    </head>\n    <body>\n        <pre>Bad Request</pre>\n    </body>\n</html>"
								}
							]
						},
						{
							"name": "json in header, html in body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3ebe86c-54e2-48b4-be42-2ea2adc44441",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<!DOCTYPE html>\n<html>\n\n<head>\n\t<title>Page Title</title>\n</head>\n\n<body>\n\n\t<h1>This is a Heading</h1>\n\t<p>This is a paragraph.</p>\n\n</body>\n\n</html>",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "html"
										}
									}
								},
								"url": "{{baseUrl}}/login"
							},
							"response": []
						}
					],
					"id": "a71c1de1-b24a-4bfc-9ec3-02dd2e7fe2a5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d564500c-154a-45d6-8d8b-0fdaa2a5722e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f8ca6bcf-bfce-46cc-8cc9-a00e0fa8feb3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					]
				},
				{
					"name": "login with wrong method - negative",
					"item": [
						{
							"name": "login with GET method",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "92f047b3-214b-456b-b627-23e7ed478743",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "05fb56b5-ad83-451e-99f1-f7581ba03932",
									"name": "login with GET method",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:41:42 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f19367a993482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "login with GET method and empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1b1cdbd1-a880-4ce3-b6cd-4d825d2143f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "fc31642e-ab9c-44f4-97c2-2acd4084afc9",
									"name": "login with GET method and empty body",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:41:49 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f195f7f4f3482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "login with PUT method",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "28a2eb50-419d-40f0-8db8-46b5ff3b96de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "71db13bf-576d-4684-8ff7-7137307f3cf6",
									"name": "login with PUT method",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:41:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f1983e9bf3482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "login with PATH method",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "697d57f1-9fe3-4667-943d-cc5cad639a5e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "42cad527-4f61-44d1-9aae-5b8814f55096",
									"name": "login with PATH method",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:42:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f19a43bbc3482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "Send DELETE on login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "47dcb3ef-34d4-48b9-ae80-774e9f130af1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "e3384451-b40d-4e93-8f8d-a4041099b6dd",
									"name": "Send DELETE on login",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:42:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f19c17a143482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{}"
								}
							]
						},
						{
							"name": "Send HEAD on login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a36bf598-9e7e-4b12-b86b-37da8caccc9a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2eee496c-6bdf-4ed6-a3db-ebf5ca3a634f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
								},
								"url": "{{baseUrl}}/login"
							},
							"response": [
								{
									"id": "71513650-b433-4564-a7b6-14506cfa0c33",
									"name": "Send HEAD on login",
									"originalRequest": {
										"method": "HEAD",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}"
										},
										"url": "{{baseUrl}}/login"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 15:42:08 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800f19d898643482-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "d8ef42c5-f1ce-4bb8-b841-b8409619dde4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e606710-c75c-47df-8830-b200f438942c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1c605c76-83c4-4a19-9f5a-d5d1cef5096d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response does not contain any data\", function () {",
									"    pm.expect(pm.response.text().length).to.be.below(3);",
									"});"
								]
							}
						}
					]
				}
			],
			"id": "f3709e90-3c1c-4976-b62c-50ed5f78e7ec"
		},
		{
			"name": "users - TODO",
			"item": [
				{
					"name": "Get users - positive",
					"item": [
						{
							"name": "Get all users list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"let responseData;\r",
											"\r",
											"const Responseschema = {\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"type\": \"object\",\r",
											"        \"properties\": {\r",
											"            \"id\": { \"type\": \"integer\", nullable: false },\r",
											"            \"email\": { \"type\": \"string\", nullable: false },\r",
											"            \"firstname\": { \"type\": \"string\", nullable: false },\r",
											"            \"lastname\": { \"type\": \"string\", nullable: false },\r",
											"            \"password\": { \"type\": \"string\", nullable: false },\r",
											"            \"avatar\": { \"type\": \"string\", nullable: false }\r",
											"        },\r",
											"        \"required\": [\"id\", \"email\", \"firstname\", \"lastname\", \"password\", \"avatar\"]\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is in JSON format\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    responseData = pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid schema\", function () {\r",
											"    pm.response.to.has.jsonSchema(Responseschema)\r",
											"});\r",
											"\r",
											"pm.test(\"Response is not an empty array\", function () {\r",
											"    pm.expect(responseData).to.be.an('array').and.to.have.length.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "973844c0-c8a0-4f4f-bc88-6be4fe3a8cdb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/users"
							},
							"response": [
								{
									"id": "98ad41db-fe4f-4c33-9f7d-2969295d4a88",
									"name": "Get all users list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/users"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sun, 03 Sep 2023 13:27:39 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "800e54d5efd53bc0-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"6e9-O+pK+G2gX34KvIU0wKYoz+X81L4\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n    {\n        \"id\": 1,\n        \"email\": \"****\",\n        \"firstname\": \"Moses\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\n    },\n    {\n        \"id\": 2,\n        \"email\": \"****\",\n        \"firstname\": \"Danial\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133060.68834.jpg\"\n    },\n    {\n        \"id\": 3,\n        \"email\": \"****\",\n        \"firstname\": \"Daryl\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133063.620005.jpg\"\n    },\n    {\n        \"id\": 4,\n        \"email\": \"****\",\n        \"firstname\": \"Dortha\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133112.3790507.jpg\"\n    },\n    {\n        \"id\": 5,\n        \"email\": \"****\",\n        \"firstname\": \"Lenore\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133153.523801.jpg\"\n    },\n    {\n        \"id\": 6,\n        \"email\": \"****\",\n        \"firstname\": \"Kerra\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133363.1959925.jpg\"\n    },\n    {\n        \"id\": 7,\n        \"email\": \"****\",\n        \"firstname\": \"Mas\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133217.1529467.jpg\"\n    },\n    {\n        \"id\": 8,\n        \"email\": \"****\",\n        \"firstname\": \"Josh\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591134851.6068161.jpg\"\n    },\n    {\n        \"id\": 9,\n        \"email\": \"****\",\n        \"firstname\": \"Daryl\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591134851.6068265.jpg\"\n    },\n    {\n        \"id\": 10,\n        \"email\": \"****\",\n        \"firstname\": \"John\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591137202.609116_1.jpg\"\n    }\n]"
								}
							]
						}
					],
					"id": "db858bf0-9f83-4edb-a10b-9d1fa956e311"
				},
				{
					"name": "Get users - negative",
					"item": [
						{
							"name": "PUT list on users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a9e4411-876a-48ba-a235-069fcebbe7ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"email\": \"****\",\r\n        \"firstname\": \"Moses\",\r\n        \"lastname\": \"****\",\r\n        \"password\": \"****\",\r\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "PATCH list on users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3e1d648c-70c2-4e11-b235-766678b718cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"email\": \"****\",\r\n        \"firstname\": \"Moses\",\r\n        \"lastname\": \"****\",\r\n        \"password\": \"****\",\r\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "PATCH object on users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "39cf3119-15ba-4e4b-b5aa-80bcc6afd34e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"email\": \"****\",\r\n    \"firstname\": \"Moses\",\r\n    \"lastname\": \"****\",\r\n    \"password\": \"****\",\r\n    \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "PUT object on users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "13c48b9c-a7d6-46cb-beef-b0d09869b8b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"email\": \"****\",\r\n    \"firstname\": \"Moses\",\r\n    \"lastname\": \"****\",\r\n    \"password\": \"****\",\r\n    \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "DELETE  on users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "505e2627-abd3-4e86-90e0-800a7448964b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/users"
							},
							"response": []
						}
					],
					"id": "42bf607e-56cd-4263-9076-a18c41fd8730"
				},
				{
					"name": "Create user - positive",
					"item": [
						{
							"name": "Create user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5a27f69-00ee-4342-856a-f2feb0dbdd20",
										"exec": [
											"let responseData;\r",
											"\r",
											"const Responseschema = {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"id\": { \"type\": \"integer\", nullable: false },\r",
											"        \"email\": { \"type\": \"string\", nullable: false },\r",
											"        \"firstname\": { \"type\": \"string\", nullable: false },\r",
											"        \"lastname\": { \"type\": \"string\", nullable: false },\r",
											"        \"password\": { \"type\": \"string\", nullable: false },\r",
											"        \"avatar\": { \"type\": \"string\", nullable: false }\r",
											"    },\r",
											"    \"required\": [\"id\", \"email\", \"firstname\", \"lastname\", \"password\", \"avatar\"]\r",
											"};\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is in JSON format\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    responseData = pm.response.json();\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid schema\", function () {\r",
											"    pm.response.to.has.jsonSchema(Responseschema);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains correct user data\", function () {\r",
											"    pm.expect(responseData.email).eqls(pm.variables.get('email'));\r",
											"    pm.expect(responseData.firstname).eqls(pm.variables.get('firstname'));\r",
											"    pm.expect(responseData.lastname).eqls(pm.variables.get('lastname'));\r",
											"    pm.expect(responseData.avatar).eqls(pm.variables.get('avatar'));\r",
											"    pm.expect(responseData.password).eqls(pm.variables.get('password'));\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set('userID', pm.response.json().id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8fda8af0-f712-4932-acae-5a63e5356e89",
										"exec": [
											"pm.variables.set('email', pm.variables.replaceIn('{{$randomEmail}}'))\r",
											"pm.variables.set('firstname', pm.variables.replaceIn('{{$randomFirstName}}'))\r",
											"pm.variables.set('lastname', pm.variables.replaceIn('{{$randomLastName}}'))\r",
											"pm.variables.set('avatar', pm.variables.replaceIn('{{$randomAvatarImage}}'))\r",
											"pm.variables.set('password', pm.variables.replaceIn('{{$randomPassword}}'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c5fc7fd7-a8ea-44b6-b881-1b9f75c78986",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"avatar\": \"{{avatar}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "Delete a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e621036f-e3bf-4123-8cf9-d342471e7174",
										"exec": [
											"const moment = require('moment');\r",
											"const baseURL = pm.variables.get(\"baseUrl\");\r",
											"var token = pm.variables.get(\"token\");\r",
											"const login = 'admin' //pm.variables.get(\"login\");\r",
											"const password = 'admin' //pm.variables.get(\"password\");\r",
											"var tokenGenerationMoment = pm.environment.get(\"token_generation_moment\");\r",
											"\r",
											"var isTokenExpired = moment(tokenGenerationMoment).isBefore(moment().subtract(59, 'minute'));\r",
											"\r",
											"if (!token || isTokenExpired) {\r",
											"    console.info(\"Acces token is empty or expired. Getting new token...\")\r",
											"\r",
											"    const options =\r",
											"    {\r",
											"        url: baseURL + \"/login\",\r",
											"        method: 'POST',\r",
											"        header: { 'content-type': 'application/json', 'accept': 'application/json' },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(\r",
											"                {\r",
											"                    \"email\": login,\r",
											"                    \"password\": password\r",
											"                }\r",
											"            )\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(options, function (err, res) {\r",
											"        if (err) {\r",
											"            console.log(err);\r",
											"        }\r",
											"        else {\r",
											"            var jsonData = res.json();\r",
											"            pm.environment.set(\"token\", jsonData.access_token);\r",
											"            pm.environment.set(\"token_generation_moment\", moment());\r",
											"        }\r",
											"    });\r",
											"\r",
											"};"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "91a9e471-8fd7-4758-8499-9386b375cd82",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.unset('userID');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f5ad09a6-d08a-40a8-9dcf-91ff4d55c335",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"id": "a45a5573-a014-42d5-a2a3-c1422fc5b03a",
											"key": "id",
											"value": "{{userID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "6586e9cb-2dc3-4e57-af5c-175bb76cb755"
				},
				{
					"name": "Create user  E2E- positive",
					"item": [
						{
							"name": "Create user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5a27f69-00ee-4342-856a-f2feb0dbdd20",
										"exec": [
											"let responseData;\r",
											"\r",
											"const Responseschema = {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"id\": { \"type\": \"integer\", nullable: false },\r",
											"        \"email\": { \"type\": \"string\", nullable: false },\r",
											"        \"firstname\": { \"type\": \"string\", nullable: false },\r",
											"        \"lastname\": { \"type\": \"string\", nullable: false },\r",
											"        \"password\": { \"type\": \"string\", nullable: false },\r",
											"        \"avatar\": { \"type\": \"string\", nullable: false }\r",
											"    },\r",
											"    \"required\": [\"id\", \"email\", \"firstname\", \"lastname\", \"password\", \"avatar\"]\r",
											"};\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is in JSON format\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    responseData = pm.response.json();\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid schema\", function () {\r",
											"    pm.response.to.has.jsonSchema(Responseschema);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains correct user data\", function () {\r",
											"    pm.expect(responseData.email).eqls(pm.variables.get('email'));\r",
											"    pm.expect(responseData.firstname).eqls(pm.variables.get('firstname'));\r",
											"    pm.expect(responseData.lastname).eqls(pm.variables.get('lastname'));\r",
											"    pm.expect(responseData.avatar).eqls(pm.variables.get('avatar'));\r",
											"    pm.expect(responseData.password).eqls(pm.variables.get('password'));\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set('userID', pm.response.json().id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8fda8af0-f712-4932-acae-5a63e5356e89",
										"exec": [
											"pm.variables.set('email', pm.variables.replaceIn('{{$randomEmail}}'))\r",
											"pm.variables.set('firstname', pm.variables.replaceIn('{{$randomFirstName}}'))\r",
											"pm.variables.set('lastname', pm.variables.replaceIn('{{$randomLastName}}'))\r",
											"pm.variables.set('avatar', pm.variables.replaceIn('{{$randomAvatarImage}}'))\r",
											"pm.variables.set('password', pm.variables.replaceIn('{{$randomPassword}}'))"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8fa7acf7-5197-4db4-90f9-ec13006b90e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"avatar\": \"{{avatar}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "Delete a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e621036f-e3bf-4123-8cf9-d342471e7174",
										"exec": [
											"const moment = require('moment');\r",
											"const baseURL = pm.variables.get(\"baseUrl\");\r",
											"var token = pm.variables.get(\"token\");\r",
											"const login = 'admin' //pm.variables.get(\"login\");\r",
											"const password = 'admin' //pm.variables.get(\"password\");\r",
											"var tokenGenerationMoment = pm.environment.get(\"token_generation_moment\");\r",
											"\r",
											"var isTokenExpired = moment(tokenGenerationMoment).isBefore(moment().subtract(59, 'minute'));\r",
											"\r",
											"if (!token || isTokenExpired) {\r",
											"    console.info(\"Acces token is empty or expired. Getting new token...\")\r",
											"\r",
											"    const options =\r",
											"    {\r",
											"        url: baseURL + \"/login\",\r",
											"        method: 'POST',\r",
											"        header: { 'content-type': 'application/json', 'accept': 'application/json' },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(\r",
											"                {\r",
											"                    \"email\": login,\r",
											"                    \"password\": password\r",
											"                }\r",
											"            )\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(options, function (err, res) {\r",
											"        if (err) {\r",
											"            console.log(err);\r",
											"        }\r",
											"        else {\r",
											"            var jsonData = res.json();\r",
											"            pm.environment.set(\"token\", jsonData.access_token);\r",
											"            pm.environment.set(\"token_generation_moment\", moment());\r",
											"        }\r",
											"    });\r",
											"\r",
											"};"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "91a9e471-8fd7-4758-8499-9386b375cd82",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.unset('userID');"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2bf44f7d-f14a-4f72-9f8a-fd9385ca1216",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"id": "a45a5573-a014-42d5-a2a3-c1422fc5b03a",
											"key": "id",
											"value": "{{userID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "f327914c-7598-410d-aabb-2f7866b24603"
				},
				{
					"name": "Create user - negative",
					"item": [
						{
							"name": "Invalid email",
							"item": [
								{
									"name": "Create user with incorrect email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e5a27f69-00ee-4342-856a-f2feb0dbdd20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8fda8af0-f712-4932-acae-5a63e5356e89",
												"exec": [
													"//{{$randomEmail}}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3ac92a40-b41a-4703-ad0e-85d532a685ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"admin.gmail.com\",\n    \"firstname\": \"{{$randomFirstName}}\",\n    \"lastname\": \"{{$randomLastName}}\",\n    \"avatar\": \"{{$randomAvatarImage}}\",\n    \"password\": \"{{$randomPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/users"
									},
									"response": []
								}
							],
							"id": "ddcba784-2c4b-4b70-8ffb-7d90c9504135"
						},
						{
							"name": "invalid first name",
							"item": [],
							"id": "5eaa7e3e-afe9-435b-938b-f673dfe8d999"
						},
						{
							"name": "invalid last name",
							"item": [],
							"id": "cc5c4c38-9ad0-4180-913f-d864ebb8dcf1"
						},
						{
							"name": "invalid avatar",
							"item": [],
							"id": "3846da32-75de-464a-be1e-1d6e53cfa856"
						},
						{
							"name": "invalid password",
							"item": [],
							"id": "21ccd236-9e66-40da-b933-655fdc979579"
						}
					],
					"id": "fc2c8638-a22a-45f0-a2d5-471579a92e78"
				},
				{
					"name": "Find user by ID - positive",
					"item": [
						{
							"name": "Get all users list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee837636-a492-42fd-b5f9-8b37c31b8c93",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is not an empty array\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('array').and.to.have.length.above(0);\r",
											"    let userID = (_.first(pm.response.json())).id\r",
											"    pm.collectionVariables.set('userID', userID)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0615a3ac-a6e0-447f-ad33-7351b705378f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/users"
							},
							"response": [
								{
									"id": "92e19155-cefd-4537-a332-4915a150f5b1",
									"name": "Get users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/users"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 01 Sep 2023 10:33:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "7ffcdb434cc1006e-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"7a3-BTHgzZCxWePo706DQ5mKnDd3vLE\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n    {\n        \"id\": 1,\n        \"email\": \"****\",\n        \"firstname\": \"Moses\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133479.7144732.jpg\"\n    },\n    {\n        \"id\": 2,\n        \"email\": \"****\",\n        \"firstname\": \"Danial\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133060.68834.jpg\"\n    },\n    {\n        \"id\": 3,\n        \"email\": \"****\",\n        \"firstname\": \"Daryl\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133063.620005.jpg\"\n    },\n    {\n        \"id\": 4,\n        \"email\": \"****\",\n        \"firstname\": \"Dortha\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133112.3790507.jpg\"\n    },\n    {\n        \"id\": 5,\n        \"email\": \"****\",\n        \"firstname\": \"Lenore\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133153.523801.jpg\"\n    },\n    {\n        \"id\": 6,\n        \"email\": \"****\",\n        \"firstname\": \"Kerra\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133363.1959925.jpg\"\n    },\n    {\n        \"id\": 7,\n        \"email\": \"****\",\n        \"firstname\": \"Mas\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591133217.1529467.jpg\"\n    },\n    {\n        \"id\": 8,\n        \"email\": \"****\",\n        \"firstname\": \"Josh\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591134851.6068161.jpg\"\n    },\n    {\n        \"id\": 9,\n        \"email\": \"****\",\n        \"firstname\": \"Daryl\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591134851.6068265.jpg\"\n    },\n    {\n        \"id\": 10,\n        \"email\": \"****\",\n        \"firstname\": \"John\",\n        \"lastname\": \"****\",\n        \"password\": \"****\",\n        \"avatar\": \".\\\\data\\\\users\\\\face_1591137202.609116_1.jpg\"\n    },\n    {\n        \"email\": \"****\",\n        \"firstname\": \"Ona\",\n        \"lastname\": \"****\",\n        \"avatar\": \"https://cdn.fakercloud.com/avatars/justinrhee_128.jpg\",\n        \"password\": \"****\",\n        \"id\": 11\n    }\n]"
								}
							]
						},
						{
							"name": "Find user by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2057f0da-9cd9-46e8-9a1d-fa30a637a02b",
										"exec": [
											"let responseData;\r",
											"\r",
											"const Responseschema = {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"id\": { \"type\": \"integer\", nullable: false },\r",
											"        \"email\": { \"type\": \"string\", nullable: false },\r",
											"        \"firstname\": { \"type\": \"string\", nullable: false },\r",
											"        \"lastname\": { \"type\": \"string\", nullable: false },\r",
											"        \"password\": { \"type\": \"string\", nullable: false },\r",
											"        \"avatar\": { \"type\": \"string\", nullable: false }\r",
											"    },\r",
											"    \"required\": [\"id\", \"email\", \"firstname\", \"lastname\", \"password\", \"avatar\"]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is in JSON format\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    responseData = pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Response has valid schema\", function () {\r",
											"    pm.response.to.has.jsonSchema(Responseschema)\r",
											"});\r",
											"\r",
											"pm.collectionVariables.unset('userID')"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "35d3809b-1b4b-4700-8198-0f7d081821cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{userID}}"
										}
									]
								},
								"description": "Returns a single user"
							},
							"response": []
						}
					],
					"id": "4fb0eda6-9b16-42ac-abbf-7320d0e3cce4"
				},
				{
					"name": "Delete user - positive",
					"item": [
						{
							"name": "Delete user with given ID - positive",
							"item": [
								{
									"name": "Create user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e5a27f69-00ee-4342-856a-f2feb0dbdd20",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.set('userID', pm.response.json().id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "dbc133bd-f986-48c8-8063-2d69b73ac2da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{$randomEmail}}\",\n  \"firstname\": \"{{$randomFirstName}}\",\n  \"lastname\": \"{{$randomLastName}}\",\n  \"avatar\": \"{{$randomAvatarImage}}\",\n  \"password\": \"{{$randomPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/users"
									},
									"response": []
								},
								{
									"name": "Delete a user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e621036f-e3bf-4123-8cf9-d342471e7174",
												"exec": [
													"const moment = require('moment');\r",
													"const baseURL = pm.variables.get(\"baseUrl\");\r",
													"var token = pm.variables.get(\"token\");\r",
													"const login = 'admin' //pm.variables.get(\"login\");\r",
													"const password = 'admin' //pm.variables.get(\"password\");\r",
													"var tokenGenerationMoment = pm.environment.get(\"token_generation_moment\");\r",
													"\r",
													"var isTokenExpired = moment(tokenGenerationMoment).isBefore(moment().subtract(59, 'minute'));\r",
													"\r",
													"if (!token || isTokenExpired) {\r",
													"    console.info(\"Acces token is empty or expired. Getting new token...\")\r",
													"\r",
													"    const options =\r",
													"    {\r",
													"        url: baseURL + \"/login\",\r",
													"        method: 'POST',\r",
													"        header: { 'content-type': 'application/json', 'accept': 'application/json' },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify(\r",
													"                {\r",
													"                    \"email\": login,\r",
													"                    \"password\": password\r",
													"                }\r",
													"            )\r",
													"        }\r",
													"    };\r",
													"\r",
													"    pm.sendRequest(options, function (err, res) {\r",
													"        if (err) {\r",
													"            console.log(err);\r",
													"        }\r",
													"        else {\r",
													"            var jsonData = res.json();\r",
													"            pm.environment.set(\"token\", jsonData.access_token);\r",
													"            pm.environment.set(\"token_generation_moment\", moment());\r",
													"        }\r",
													"    });\r",
													"\r",
													"};"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91a9e471-8fd7-4758-8499-9386b375cd82",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "fe2f4263-a7a2-493a-b2c4-0ae330dcdb5f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{token}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all users list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "487b84a4-6737-4a72-aba2-9cbbbf3723fe",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"The list of all users does not contain the id of the deleted user\", function () {\r",
													"    let userID = pm.collectionVariables.get('userID');\r",
													"    let users = pm.response.json();\r",
													"    _.each(users, (user) => {\r",
													"        pm.expect(user.id).not.eql(userID);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e06040b4-ebbe-436f-ac9b-7081bc2899fd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/users"
									},
									"response": []
								},
								{
									"name": "Find user by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa521810-04bc-4587-813c-4f55cae9f59a",
												"exec": [
													"pm.test(\"Status code is 404, user not found\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.collectionVariables.unset('userID')"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "67d7fc18-d69d-474e-a17f-cb2af6314b31",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userID}}"
												}
											]
										},
										"description": "Returns a single user"
									},
									"response": []
								}
							],
							"id": "2f0e5a30-b14b-4ccf-8469-7ee04ebf2f45"
						}
					],
					"id": "087a7833-b627-468d-b847-2f4e89070f81"
				}
			],
			"id": "4004895d-e9d2-4c19-a350-dbaf083e2efc"
		},
		{
			"name": "articles - TODO",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Find article by ID",
							"id": "c889597c-9d11-45dc-b1cc-1a0ef614bc39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/articles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"id": "ff52e9c7-e0af-454e-8bbd-08b12a288ef5",
											"key": "id",
											"value": "<integer>"
										}
									]
								},
								"description": "Returns a single article"
							},
							"response": [
								{
									"id": "cdfc321b-c893-48e4-957e-27b4ec04130c",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"id\": \"<integer>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"id": "d00a312c-0027-4a00-8f69-ff159c3784dd",
									"name": "Article not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Updates an article",
							"id": "e9bca450-2c3d-4c84-98e1-27b30795fd47",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/articles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"id": "a944d867-83cb-44ee-8d6f-1e41218d4cd0",
											"key": "id",
											"value": "<integer>"
										}
									]
								},
								"description": "Updates an article."
							},
							"response": [
								{
									"id": "6c958027-1061-4b10-afd0-175ddc02b0df",
									"name": "Article updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"id\": \"<integer>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"id": "428b6742-28c3-4fbb-bad0-1a5add4cf569",
									"name": "Article created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"id\": \"<integer>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"id": "519488e6-9474-4a80-a14a-7929248221f7",
									"name": "Bad request - malformed JSON",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "f6ea949f-f7fa-4664-90d1-a055eddb5922",
									"name": "Article not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "38a62d04-b9b7-4ebb-be29-0bcf1108df1f",
									"name": "Invalid article supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Updates an article",
							"id": "14b09bdb-754f-4128-85c5-626f015a4415",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/articles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"id": "074ecf43-a43e-406b-9507-66fe19f0a08d",
											"key": "id",
											"value": "<integer>"
										}
									]
								},
								"description": "Updates an article."
							},
							"response": [
								{
									"id": "3763e8e4-11d5-488a-a6d0-b6cc9904f40b",
									"name": "Article updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"id\": \"<integer>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"id": "b7bfb014-fac1-429c-be4d-10543443e370",
									"name": "Bad request - malformed JSON",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "efebde44-2fbc-42ea-bf25-7845b8b4d4fc",
									"name": "Article not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "62ffe2c0-60fc-4c1d-824d-f7385d5d2a74",
									"name": "Invalid article supplied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Deletes an article",
							"id": "b2c14dec-a8a1-4080-8e68-eafa1ec92d2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"id": "8898e32c-f5b0-4bd2-8cac-7fd9181fe2cb",
											"key": "id",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"id": "a3b94435-8655-403e-9dfa-6421ba360ba3",
									"name": "Article deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "2b8b6d70-c8ce-4ee9-a597-51b80b617f23",
									"name": "Article not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Info about article",
							"id": "d8ac3a6c-8c6e-483a-a94c-5b9b183b976b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"id": "8569d9c9-d528-425a-a31c-a02895f05d19",
											"key": "id",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"id": "9463af83-1d42-4aaa-9043-568d61b48273",
									"name": "Article exists",
									"originalRequest": {
										"method": "HEAD",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "076d97a8-295e-48f7-bff3-816e41c9f0d2",
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "HEAD",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "2ae8017b-800d-490c-bec2-03b3191a2ef5",
									"name": "Article not found",
									"originalRequest": {
										"method": "HEAD",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "8df6d176-22b0-4704-820b-d1ecf9e92351"
				},
				{
					"name": "Get all articles - positive",
					"item": [
						{
							"name": "Get all articles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc7e7c67-ced8-414e-8ac6-c641a25ac9d3",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response is an array with at least one element\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    pm.expect(responseData).to.have.lengthOf.at.least(1);",
											"});",
											"",
											"",
											"pm.test(\"Each article has the required fields\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData).to.be.an('array');",
											"  responseData.forEach(function (article) {",
											"    pm.expect(article).to.have.property('id');",
											"    pm.expect(article).to.have.property('title');",
											"    pm.expect(article).to.have.property('body');",
											"    pm.expect(article).to.have.property('user_id');",
											"    pm.expect(article).to.have.property('date');",
											"    pm.expect(article).to.have.property('image');",
											"  });",
											"});",
											"",
											"",
											"pm.test(\"Id is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    ",
											"    responseData.forEach(function(article) {",
											"        pm.expect(article.id).to.be.a('number').and.to.be.greaterThan(-1, \"Id should be a non-negative integer\");",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"user_id is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
											"",
											"    responseData.forEach(function (article) {",
											"        pm.expect(article.user_id).to.be.a('number').and.to.be.at.least(0);",
											"    });",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c9cc6275-d9d3-4187-831e-b319e4602e46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/articles"
							},
							"response": [
								{
									"id": "847c924d-20fe-4453-b059-13d8f113ebc4",
									"name": "Get all articles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/articles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 28 Sep 2023 18:00:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "80dde2288b993bc9-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"c976-YtZYZD9TkcBGX5XVjF5UHD8M1uw\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n    {\n        \"id\": 1,\n        \"title\": \"How to write effective test cases\",\n        \"body\": \"Test cases are the backbone of any testing process. They define what to test, how to test, and what to expect. Writing effective test cases can save time, effort, and resources. Here are some tips for writing effective test cases:\\n- Use clear and concise language\\n- Follow a consistent format and structure\\n- Include preconditions, steps, expected results, and postconditions\\n- Cover positive, negative, and boundary scenarios\\n- Prioritize test cases based on risk and importance\\n- Review and update test cases regularly\",\n        \"user_id\": 1,\n        \"date\": \"2021-07-13T16:35:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Benefits of continuous integration and delivery\",\n        \"body\": \"Continuous integration (CI) and continuous delivery (CD) are practices that aim to improve the quality and speed of software development. CI involves building and testing code frequently and automatically. CD involves deploying code to production environments quickly and reliably. Some of the benefits of CI/CD are:\\n- Faster feedback and bug detection\\n- Reduced integration conflicts and errors\\n- Higher code quality and security\\n- Shorter release cycles and time to market\\n- Increased customer satisfaction and trust\",\n        \"user_id\": 2,\n        \"date\": \"2020-06-15T11:12:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\christian-cueni-Us3TUHxMl3U-unsplash.jpg\"\n    },\n    {\n        \"id\": 3,\n        \"title\": \"What is agile software development?\",\n        \"body\": \"Agile software development is a set of principles and practices that emphasize collaboration, flexibility, and customer value. Agile software development is based on the Agile Manifesto, which states:\\n- Individuals and interactions over processes and tools\\n- Working software over comprehensive documentation\\n- Customer collaboration over contract negotiation\\n- Responding to change over following a plan Agile software development uses iterative and incremental methods, such as Scrum, Kanban, or XP, to deliver software in small batches.\",\n        \"user_id\": 3,\n        \"date\": \"2021-07-25T13:34:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"title\": \"How to use Selenium for web automation\",\n        \"body\": \"Selenium is a popular open-source tool for automating web browsers. Selenium can be used to perform various tasks on web applications, such as filling forms, clicking buttons, navigating pages, verifying content, etc. Selenium supports multiple languages, such as Java, Python, C#, Ruby, etc., and multiple browsers, such as Chrome, Firefox, Edge, etc. To use Selenium for web automation, you need to:\\n- Install Selenium WebDriver and a browser driver\\n- Write a script that interacts with web elements using locators\\n- Run the script and verify the results\",\n        \"user_id\": \"3\",\n        \"date\": \"2021-10-16T17:59:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\",\n        \"id\": 4\n    },\n    {\n        \"id\": 5,\n        \"title\": \"Software quality assurance vs software testing\",\n        \"body\": \"Software quality assurance (SQA) and software testing are two related but distinct activities that aim to ensure the quality of software products. SQA is a proactive process that involves planning, designing, implementing, and monitoring quality standards and processes throughout the software development life cycle. Software testing is a reactive process that involves checking, verifying, and validating the functionality, performance, usability, security, etc., of software products against the requirements. SQA prevents defects while testing detects defects.\",\n        \"user_id\": 3,\n        \"date\": \"2021-05-01T19:34:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 6,\n        \"title\": \"Best practices for code reviews\",\n        \"body\": \"Code reviews are an essential part of software development that help improve the quality, readability, maintainability, and security of code. Code reviews also foster knowledge sharing, collaboration, and learning among developers. Here are some best practices for code reviews:\\n- Define clear goals and expectations for code reviews\\n- Use a code review tool or platform that facilitates communication and feedback\\n- Review code in small chunks and focus on the most important issues\\n- Provide constructive, respectful, and specific comments\\n- Follow up on the comments and resolve them promptly\",\n        \"user_id\": 1,\n        \"date\": \"2021-01-01T11:21:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 7,\n        \"title\": \"What is test-driven development?\",\n        \"body\": \"Test-driven development (TDD) is a software development technique that involves writing tests before writing code. TDD follows a cycle of three steps:\\n- Write a failing test for a feature or functionality\\n- Write the minimum amount of code to make the test pass\\n- Refactor the code to improve its quality and readability TDD helps developers create clean, robust, and reliable code that meets the requirements. TDD also helps developers avoid over-engineering or under-engineering their solutions.\",\n        \"user_id\": 1,\n        \"date\": \"2020-01-01T11:42:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\andrew-svk-nQvFebPtqbw-unsplash.jpg\"\n    },\n    {\n        \"id\": 8,\n        \"title\": \"What are the responsibilities of a tester?\",\n        \"body\": \"A tester is someone who performs testing tasks on software products to ensure their quality and functionality. A tester has the following responsibilities:\\n- Analyze and understand the requirements and expectations of the software\\n- Plan and design test cases, scenarios, data, scripts, etc.\\n- Execute test cases and record test results\\n- Identify and report defects or errors in the software\\n- Verify and validate the fixes or changes in the software\\n- Communicate and collaborate with developers, stakeholders, customers, etc.\",\n        \"user_id\": 1,\n        \"date\": \"2018-08-27T07:30:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 9,\n        \"title\": \"What are the responsibilities of a QA engineer?\",\n        \"body\": \"A QA engineer is someone who performs quality assurance tasks on software products to ensure their quality and reliability. A QA engineer has the following responsibilities:\\n- Define and implement quality standards and processes throughout the software development life cycle\\n- Monitor and measure the quality of the software products and processes\\n- Perform audits and reviews on the software products and processes\\n- Identify and report quality issues or risks in the software products and processes\\n- Provide guidance and support to the development team and the organization on quality matters\",\n        \"user_id\": 7,\n        \"date\": \"2019-11-20T01:49:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 10,\n        \"title\": \"What are the skills of a tester?\",\n        \"body\": \"A tester is someone who performs testing tasks on software products to ensure their quality and functionality. A tester needs to have a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a tester are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 4,\n        \"date\": \"2016-11-27T15:34:44Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 11,\n        \"title\": \"What are the skills of a QA engineer?\",\n        \"body\": \"A QA engineer is someone who performs quality assurance tasks on software products to ensure their quality and reliability. A QA engineer needs to have a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a QA engineer are:\\n- Analytical and logical thinking: to define and implement quality standards and processes\\n- Attention to detail: to monitor and measure the quality of the software products and processes\\n- Communication and collaboration: to communicate and report quality issues or risks to developers, stakeholders, customers, etc.\\n- Curiosity and creativity: to identify and suggest improvements or solutions for quality matters\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 2,\n        \"date\": \"2021-01-15T05:54:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 12,\n        \"title\": \"What are the tools used by QA engineers?\",\n        \"body\": \"QA engineers use various tools to automate or simplify their quality assurance tasks, such as quality planning, monitoring, measuring, auditing, reporting, etc. There are many tools available for QA engineers, depending on the type, purpose, and scope of quality assurance. Some of the popular tools used by QA engineers are:\\n- SonarQube: for code quality analysis\\n- Cucumber: for behavior-driven development\\n- Zephyr: for test management\\n- Mantis: for bug tracking and project management\\n- Jenkins: for continuous integration\",\n        \"user_id\": 1,\n        \"date\": \"2021-06-09T16:19:49Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\mahdikordi-4hCYZT_zPu8-unsplash.jpg\"\n    },\n    {\n        \"id\": 13,\n        \"title\": \"What are the differences between testers and QA engineers?\",\n        \"body\": \"Testers and QA engineers are both involved in ensuring the quality of software products, but they have some differences in their roles, responsibilities, and skills. Some of the differences are: \\n- Testers focus on verifying the functionality and performance of the software products, while QA engineers focus on defining and implementing quality standards and processes throughout the software development life cycle.\\n- Testers design and execute test cases, identify and report defects, and verify and validate fixes or changes in the software products, while QA engineers monitor and measure the quality of the software products and processes, perform audits and reviews, and identify and report quality issues or risks.\\n- Testers need to have skills such as analytical and logical thinking, attention to detail, communication and collaboration, curiosity and creativity, learning and adaptability, while QA engineers need to have skills such as analytical and logical thinking, attention to detail, communication and collaboration, curiosity and creativity, learning and adaptability, as well as quality planning, monitoring, measuring, auditing, reporting, etc.\",\n        \"user_id\": 3,\n        \"date\": \"2016-10-31T11:55:41Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 14,\n        \"title\": \"What are some examples of software design patterns?\",\n        \"body\": \"There are many types and categories of software design patterns, depending on the problem domain, scope, and level of abstraction. Some of the common types and examples of software design patterns are:\\n- Creational patterns: deal with the creation and instantiation of objects. Examples are Singleton, Factory, Builder, Prototype, etc.\\n- Structural patterns: deal with the composition and arrangement of objects. Examples are Adapter, Bridge, Composite, Decorator, Facade, Proxy, etc.\\n- Behavioral patterns: deal with the interaction and communication of objects. Examples are Chain of Responsibility, Command, Iterator, Mediator, Observer, Strategy, Template Method, etc.\",\n        \"user_id\": 3,\n        \"date\": \"2015-04-25T15:45:08Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 15,\n        \"title\": \"What are software design patterns and why use them?\",\n        \"body\": \"Software design patterns are general and reusable solutions to common problems that occur in software design. Software design patterns are not ready-made code, but rather templates or guidelines that can be adapted and applied to different situations. Software design patterns can help:\\n- Improve the quality and maintainability of the software\\n- Simplify the communication and collaboration among developers\\n- Reduce the complexity and redundancy of the code\\n- Promote good practices and principles of software design\",\n        \"user_id\": 6,\n        \"date\": \"2020-06-07T22:59:33Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 16,\n        \"title\": \"What is software quality and how to measure it?\",\n        \"body\": \"Software quality is the degree to which a software product meets the requirements and expectations of the customer and the stakeholders. Software quality can be measured by various criteria, such as:\\n- Functionality: the ability of the software to perform the functions and features that it is supposed to do\\n- Performance: the efficiency and speed of the software under different conditions and loads\\n- Usability: the ease of use and learnability of the software for the users\\n- Reliability: the consistency and dependability of the software over time and across situations\\n- Security: the protection of the software from unauthorized access, modification, or damage\\n- Maintainability: the ease of modifying and updating the software to fix defects or add new features\",\n        \"user_id\": 6,\n        \"date\": \"2017-12-31T01:14:02Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 17,\n        \"title\": \"What are the types of software quality assurance activities?\",\n        \"body\": \"Software quality assurance activities are the tasks that help ensure the quality of software products. Software quality assurance activities can be classified into different types based on various criteria, such as:\\n- The level of testing: unit testing, integration testing, system testing, acceptance testing\\n- The purpose of testing: functional testing, non-functional testing, regression testing, smoke testing\\n- The technique of testing: black-box testing, white-box testing, gray-box testing\\n- The timing of testing: static testing, dynamic testing\\n- The degree of automation: manual testing, automated testing\",\n        \"user_id\": 3,\n        \"date\": \"2018-10-17T12:56:37Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 18,\n        \"title\": \"What are the skills of a good software quality assurance engineer?\",\n        \"body\": \"A good software quality assurance engineer is someone who has a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a good software quality assurance engineer are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 4,\n        \"date\": \"2015-02-04T07:48:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 19,\n        \"title\": \"What is software quality assurance and why is it important?\",\n        \"body\": \"Software quality assurance (SQA) is a proactive process that involves planning, designing, implementing, and monitoring quality standards and processes throughout the software development life cycle. SQA is important because it helps:\\n- Ensure the quality and reliability of the software\\n- Prevent defects and errors in the software\\n- Enhance customer satisfaction and trust\\n- Reduce development and maintenance costs\\n- Comply with standards and regulations\",\n        \"user_id\": 1,\n        \"date\": \"2017-09-08T03:41:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 20,\n        \"title\": \"What is continuous integration and why use it?\",\n        \"body\": \"Continuous integration (CI) is a software development practice that involves building and testing code frequently and automatically. CI helps detect and fix errors early in the development cycle, improving the quality and reliability of the code. CI also enables faster feedback and collaboration among developers. Some of the reasons to use CI are:\\n- Faster feedback and bug detection\\n- Reduced integration conflicts and errors\\n- Higher code quality and security\\n- Shorter release cycles and time to market\\n- Increased customer satisfaction and trust\",\n        \"user_id\": 3,\n        \"date\": \"2016-05-15T13:48:36Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 21,\n        \"title\": \"The tools used for end-to-end testing\",\n        \"body\": \"End-to-end testing tools are software applications that help create and run end-to-end tests. End-to-end testing tools provide features such as web automation, browser drivers, page objects, data-driven techniques, etc. There are many tools available for end-to-end testing, depending on the type, scope, and complexity of end-to-end scenarios. Some of the popular tools used for end-to-end testing are:\\n- Playwright: for web automation\\n- Selenium: for web automation\\n- Cypress: for web automation\\n- Appium: for mobile automation\\n- Postman: for API testing\\n- Puppeteer: for headless browser automation\",\n        \"user_id\": 7,\n        \"date\": \"2015-01-15T01:48:39Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 22,\n        \"title\": \"The challenges of unit testing\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has some challenges, such as:\\n- Choosing the right level of granularity and scope for unit testing\\n- Writing testable and modular code that follows the single responsibility principle\\n- Isolating dependencies and side effects using mocks, stubs, or fakes\\n- Measuring and improving code coverage and test quality\\n- Balancing the trade-off between unit testing and other types of testing\",\n        \"user_id\": 1,\n        \"date\": \"2015-11-10T12:16:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 23,\n        \"title\": \"The benefits of unit testing\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has many benefits, such as:\\n- Improving the quality and reliability of the code\\n- Detecting and fixing defects early in the development cycle\\n- Enhancing the design and structure of the code\\n- Facilitating refactoring and maintenance of the code\\n- Supporting documentation and knowledge sharing of the code\",\n        \"user_id\": 2,\n        \"date\": \"2017-05-06T04:52:16Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\h-ng-nguy-n-0iGK9zCA7Ak-unsplash.jpg\"\n    },\n    {\n        \"id\": 24,\n        \"title\": \"The challenges of end-to-end testing\",\n        \"body\": \"End-to-end testing is a complex and time-consuming process that involves many challenges, such as:\\n- High cost and effort of creating and maintaining end-to-end tests\\n- Low speed and reliability of running end-to-end tests\\n- High dependency on external factors, such as network, browser, environment, etc.\\n- Difficulty in debugging and isolating failures in end-to-end tests\\n- Low coverage and value of end-to-end tests compared to other types of tests\",\n        \"user_id\": 1,\n        \"date\": \"2021-08-23T14:19:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 25,\n        \"title\": \"How to write good end-to-end tests\",\n        \"body\": \"End-to-end tests are tests that verify the functionality and behavior of the whole system or application. End-to-end tests are the top layer of the test pyramid and should be comprehensive, realistic, and valuable. Here are some tips for writing good end-to-end tests:\\n- Use a testing framework and a tool to create and run end-to-end tests\\n- Follow a naming convention and a structure for end-to-end tests\\n- Write one user story per end-to-end test\\n- Use meaningful and descriptive names for end-to-end tests\\n- Cover critical user journeys and business flows for each user story\\n- Use page objects and data-driven techniques to simplify end-to-end tests\",\n        \"user_id\": 3,\n        \"date\": \"2022-03-15T10:10:51Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 26,\n        \"title\": \"How to write good integration tests\",\n        \"body\": \"Integration tests are tests that verify the interaction and integration of multiple units or components of code. Integration tests are the middle layer of the test pyramid and should be reliable, consistent, and realistic. Here are some tips for writing good integration tests:\\n- Use a testing framework and a mocking library to create and run integration tests\\n- Follow a naming convention and a structure for integration tests\\n- Write one scenario per integration test\\n- Use meaningful and descriptive names for integration tests\\n- Cover happy path, alternative path, and exception path for each scenario\\n- Manage test data and environments carefully\",\n        \"user_id\": 5,\n        \"date\": \"2019-12-28T21:44:06Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-ooNuyiU4d3w-unsplash.jpg\"\n    },\n    {\n        \"id\": 27,\n        \"title\": \"What are the advantages and disadvantages of end-to-end testing?\",\n        \"body\": \"End-to-end testing is the process of verifying the functionality and behavior of the whole system or application. End-to-end testing is the top layer of the test pyramid and has some advantages and disadvantages. Some of the advantages are:\\n- Provides a comprehensive and realistic view of the software\\n- Detects system-level issues that may not be found by other types of testing\\n- Enhances customer satisfaction and trust Some of the disadvantages are:\\n- Requires high cost and effort to create and maintain end-to-end tests\\n- Has low speed and reliability compared to other types of testing\\n- Has high dependency on external factors, such as network, browser, environment, etc.\",\n        \"user_id\": 4,\n        \"date\": \"2021-04-20T02:44:13Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-ooNuyiU4d3w-unsplash.jpg\"\n    },\n    {\n        \"id\": 28,\n        \"title\": \"How to improve software quality and testing?\",\n        \"body\": \"Software quality and testing are critical activities that affect the success and satisfaction of software products. Software quality and testing can be improved by following some tips, such as:\\n- Understand the requirements and expectations clearly and align them with the test objectives, strategy, and scope\\n- Use the test pyramid model to balance the speed, cost, and coverage of testing\\n- Use automation tools and frameworks where appropriate to simplify and speed up testing tasks\\n- Follow a coding standard and style guide for test scripts to ensure consistency and readability\\n- Document and report test results and defects clearly and accurately\\n- Review and update test cases regularly to ensure their relevance and validity\\n- Perform different types of tests based on risk and importance\\n- Define and implement quality standards and processes throughout the software development life cycle\\n- Monitor and measure the quality of the software products and processes\\n- Perform audits and reviews on the software products and processes\",\n        \"user_id\": 7,\n        \"date\": \"2016-12-26T06:44:52Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 29,\n        \"title\": \"What are some common software quality issues?\",\n        \"body\": \"Software quality issues are problems or defects that affect the quality and functionality of software products. Software quality issues can have various causes, impacts, and solutions. Some of the common software quality issues are:\\n- Functional issues: the software does not perform the functions or features that it is supposed to do or does not meet the requirements or expectations\\n- Performance issues: the software is slow, inefficient, or unstable under different conditions or loads\\n- Usability issues: the software is difficult to use or learn for the users or does not meet their needs or preferences\\n- Reliability issues: the software is inconsistent or unreliable over time or across situations\\n- Security issues: the software is vulnerable to unauthorized access, modification, or damage\",\n        \"user_id\": 5,\n        \"date\": \"2018-07-18T00:39:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 30,\n        \"title\": \"How to write good unit tests\",\n        \"body\": \"Unit tests are tests that verify the functionality of individual units or components of code. Unit tests are the foundation of the test pyramid and should be fast, isolated, and independent. Here are some tips for writing good unit tests:\\n- Use a testing framework and a mocking library to create and run unit tests\\n- Follow a naming convention and a structure for unit tests\\n- Write one assertion per unit test\\n- Use meaningful and descriptive names for unit tests\\n- Cover positive, negative, and edge cases for each unit\\n- Refactor and optimize unit tests regularly\",\n        \"user_id\": 1,\n        \"date\": \"2016-10-09T13:50:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\mahdikordi-4hCYZT_zPu8-unsplash.jpg\"\n    },\n    {\n        \"id\": 31,\n        \"title\": \"What are the advantages and disadvantages of unit testing?\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has some advantages and disadvantages. Some of the advantages are:\\n- Improves the quality and reliability of the code\\n- Detects and fixes defects early in the development cycle\\n- Enhances the design and structure of the code\\n- Facilitates refactoring and maintenance of the code\\n- Supports documentation and knowledge sharing of the code Some of the disadvantages are:\\n- Requires extra time and effort to write and maintain unit tests\\n- May not cover all scenarios and aspects of the software\\n- May not detect integration or system-level issues\",\n        \"user_id\": 5,\n        \"date\": \"2018-07-16T10:15:26Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 32,\n        \"title\": \"What is the test pyramid and why use it?\",\n        \"body\": \"The test pyramid is a model that illustrates the optimal distribution of different types of tests in a software project. The test pyramid consists of three layers:\\n- Unit tests: tests that verify the functionality of individual units or components of code\\n- Integration tests: tests that verify the interaction and integration of multiple units or components of code\\n- End-to-end tests: tests that verify the functionality and behavior of the whole system or application The test pyramid helps to:\\n- Balance the speed, cost, and coverage of testing\\n- Reduce the dependency and maintenance of testing\\n- Increase the reliability and confidence of testing\",\n        \"user_id\": 3,\n        \"date\": \"2018-08-08T02:22:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 33,\n        \"title\": \"What are the phases of software testing life cycle?\",\n        \"body\": \"Software testing life cycle (STLC) is a sequence of activities that guide the planning, execution, and reporting of software testing. The phases of STLC are:\\n- Requirement analysis: analyze and understand the requirements and scope of testing\\n- Test planning: define the test objectives, strategy, resources, schedule, etc.\\n- Test design: create test cases, scenarios, data, scripts, etc.\\n- Test environment setup: prepare and configure the hardware, software, network, etc., required for testing\\n- Test execution: run the test cases and record the results\\n- Test closure: evaluate the test results and report the outcomes\",\n        \"user_id\": 4,\n        \"date\": \"2020-04-12T02:17:51Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 34,\n        \"title\": \"What are the skills of a good software tester?\",\n        \"body\": \"A good software tester is someone who has a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a good software tester are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 3,\n        \"date\": \"2021-09-13T01:47:45Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 35,\n        \"title\": \"What is software testing and why is it important?\",\n        \"body\": \"Software testing is the process of checking, verifying, and validating the functionality, performance, usability, security, etc., of software products against the requirements and expectations. Software testing is important because it helps:\\n- Ensure the quality and reliability of the software\\n- Detect and fix defects or errors in the software\\n- Enhance customer satisfaction and trust\\n- Reduce development and maintenance costs\\n- Comply with standards and regulations\",\n        \"user_id\": 1,\n        \"date\": \"2022-05-20T05:38:12Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 36,\n        \"title\": \"What are the types of software testing?\",\n        \"body\": \"Software testing can be classified into different types based on various criteria, such as: \\n- The level of testing: unit testing, integration testing, system testing, acceptance testing\\n- The purpose of testing: functional testing, non-functional testing, regression testing, smoke testing \\n- The technique of testing: black-box testing, white-box testing, gray-box testing\\n- The timing of testing: static testing, dynamic testing\\n- The degree of automation: manual testing, automated testing\",\n        \"user_id\": 3,\n        \"date\": \"2020-07-29T14:14:41Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 37,\n        \"title\": \"What is Playwright and why use it?\",\n        \"body\": \"Playwright is a tool that enables reliable and fast end-to-end testing of web applications. Playwright can be used to automate various tasks on web applications, such as filling forms, clicking buttons, navigating pages, verifying content, etc. Playwright supports multiple languages, such as JavaScript, Python, Java, etc., and multiple browsers, such as Chrome, Firefox, Edge, etc. Some of the reasons to use Playwright are:\\n- It provides a consistent and fluent API across browsers\\n- It handles dynamic and complex web elements\\n- It supports parallel and headless testing\\n- It integrates with popular testing frameworks and tools\",\n        \"user_id\": 4,\n        \"date\": \"2022-07-05T13:20:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 38,\n        \"title\": \"The benefits of agile software development\",\n        \"body\": \"Agile software development is a set of principles and practices that emphasize collaboration, flexibility,and customer value. Agile software development has many benefits, such as:\\n- Faster delivery of value to the customer\\n- Improved quality and reliability of the software\\n- Increased responsiveness and adaptability to changing requirements\\n- Enhanced communication and collaboration among the team and the stakeholders\\n- Higher customer satisfaction and trust\\n- Greater innovation and creativity\\n- Reduced waste and risk\",\n        \"user_id\": 2,\n        \"date\": \"2015-04-15T14:58:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 39,\n        \"title\": \"The events of Scrum framework\",\n        \"body\": \"Scrum is an agile framework that uses five events to organize and manage software development. The five events are:\\n- Sprint: a time-boxed period (usually 2-4 weeks) in which the team delivers a potentially shippable increment of value\\n- Sprint planning: a meeting at the beginning of a sprint where the team plans what to deliver and how to deliver it\\n- Daily Scrum: a short (15 minutes) daily meeting where the team members synchronize their work and progress\\n- Sprint review: a meeting at the end of a sprint where the team demonstrates the increment and receives feedback from the stakeholders\\n- Sprint retrospective: a meeting after the sprint review where the team inspects and improves their process\",\n        \"user_id\": 6,\n        \"date\": \"2022-09-05T12:23:14Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 40,\n        \"title\": \"The challenges of test automation\",\n        \"body\": \"Test automation is the use of software tools or scripts to perform testing tasks that are otherwise manual, repetitive, or time-consuming. Test automation has many benefits, but it also comes with some challenges, such as:\\n- Selecting the right tool or framework for the project\\n- Designing and maintaining robust and reusable test cases\\n- Handling dynamic or complex web elements\\n- Dealing with synchronization issues and timeouts\\n- Managing test data and environments\\n- Integrating test automation with CI/CD pipeline\\n- Measuring and improving test automation ROI\",\n        \"user_id\": 7,\n        \"date\": \"2021-08-30T17:55:10Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-BulYN_Vs_dw-unsplash.jpg\"\n    },\n    {\n        \"id\": 41,\n        \"title\": \"The artifacts of Scrum framework\",\n        \"body\": \"Scrum is an agile framework that uses three artifacts to manage and deliver software products. The three artifacts are:\\n- Product backlog: a prioritized list of features and requirements that provide value to the customer\\n- Sprint backlog: a subset of the product backlog that the team commits to deliver in a sprint\\n- Increment: a potentially shippable piece of software that meets the definition of done and adds value to the product The artifacts are transparent and inspectable by the team and the stakeholders. The artifacts are also adaptable and refined based on feedback and changes.\",\n        \"user_id\": 2,\n        \"date\": \"2021-10-20T23:44:27Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 42,\n        \"title\": \"How to use Jenkins for continuous integration\",\n        \"body\": \"Jenkins is a widely used open-source tool for continuous integration (CI), which is a software development practice that involves building and testing code frequently and automatically. Jenkins can be used to automate various tasks in the CI pipeline, such as:\\n- Triggering builds based on code changes or schedules\\n- Running tests and code analysis tools\\n- Reporting test results and code quality metrics\\n- Deploying code to different environments\\n- Sending notifications and alerts\\n\\nTo use Jenkins for CI, you need to:\\n- Install Jenkins and configure it according to your needs\\n- Create jobs that define the tasks to be performed\\n- Add plugins that extend the functionality of Jenkins\\n- Configure build triggers, parameters, steps, etc.\\n- Run the jobs and monitor the results\",\n        \"user_id\": 1,\n        \"date\": \"2019-05-17T22:20:36Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 43,\n        \"title\": \"The difference between agile and waterfall methodologies\",\n        \"body\": \"Agile and waterfall are two contrasting software development methodologies that differ in their approach, philosophy, and practices. Agile is an iterative and incremental method that delivers software in small batches with frequent feedback and changes. Waterfall is a linear and sequential method that delivers software in one large batch with predefined requirements and specifications. Some of the differences between agile and waterfall are:\\n- Agile is adaptive and flexible, while waterfall is predictive and rigid\\n- Agile is customer-centric and collaborative, while waterfall is contract-centric and siloed\\n- Agile is empirical and experimental, while waterfall is analytical and planned\",\n        \"user_id\": 6,\n        \"date\": \"2019-07-14T12:26:14Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\h-ng-nguy-n-0iGK9zCA7Ak-unsplash.jpg\"\n    },\n    {\n        \"id\": 44,\n        \"title\": \"What is the test pyramid and how to use it?\",\n        \"body\": \"The test pyramid is a model that illustrates the optimal distribution of different types of tests in a software project. The test pyramid consists of three layers:\\n- Unit tests: tests that verify the functionality of individual units or components of code\\n- Integration tests: tests that verify the interaction and integration of multiple units or components of code\\n- End-to-end tests: tests that verify the functionality and behavior of the whole system or application The test pyramid helps to:\\n- Balance the speed, cost, and coverage of testing\\n- Reduce the dependency and maintenance of testing\\n- Increase the reliability and confidence of testing To use the test pyramid, you need to:\\n- Write more unit tests than integration tests, and more integration tests than end-to-end tests\\n- Use automation tools and frameworks for each layer of testing\\n- Run unit tests frequently and locally, integration tests occasionally and remotely, and end-to-end tests rarely and remotely\",\n        \"user_id\": 7,\n        \"date\": \"2015-08-30T01:42:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 45,\n        \"title\": \"How to use Postman for API testing\",\n        \"body\": \"Postman is a popular tool for testing APIs (application programming interfaces). Postman can be used to send requests, receive responses, validate data, run tests, create reports, etc. To use Postman for API testing, you need to:\\n- Install Postman and create an account\\n- Create a collection that groups related requests\\n- Add requests to the collection with the URL, method, parameters, headers, body, etc.\\n- Add tests to the requests using JavaScript or Postman's built-in snippets\\n- Run the requests individually or as a collection and verify the results\",\n        \"user_id\": 5,\n        \"date\": \"2022-09-03T12:38:55Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 46,\n        \"title\": \"The advantages of test automation\",\n        \"body\": \"Test automation is the use of software tools or scripts to perform testing tasks that are otherwise manual, repetitive, or time-consuming. Test automation has many advantages, such as:\\n- Increased test coverage and accuracy\\n- Reduced testing time and cost\\n- Improved testing efficiency and productivity\\n- Enhanced testing reliability and consistency\\n- Faster feedback and bug detection \\n- Higher customer satisfaction and quality\",\n        \"user_id\": 7,\n        \"date\": \"2015-04-20T17:13:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 47,\n        \"title\": \"The roles and responsibilities of a Scrum Master\",\n        \"body\": \"A Scrum Master is a servant-leader who facilitates and coaches the Scrum team and the organization in applying Scrum. A Scrum Master has the following roles and responsibilities:\\n- Ensure that the team understands and follows Scrum values, principles, and practices\\n- Remove impediments and obstacles that hinder the team's progress and performance\\n- Protect the team from external distractions and interferences\\n- Promote self-organization, collaboration, and empowerment within the team\\n- Foster a culture of continuous improvement and feedback\\n- Support the Product Owner in managing the product backlog and maximizing value\",\n        \"user_id\": 3,\n        \"date\": \"2012-07-23T22:14:45Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-BulYN_Vs_dw-unsplash.jpg\"\n    },\n    {\n        \"id\": 48,\n        \"title\": \"How to use Cucumber for behavior-driven development\",\n        \"body\": \"Cucumber is a tool that supports behavior-driven development (BDD), a software development approach that focuses on the behavior and outcomes of the software. Cucumber allows writing executable specifications in a natural language called Gherkin. Gherkin uses a format of Given-When-Then to describe scenarios. To use Cucumber for BDD, you need to:\\n- Write feature files that contain scenarios in Gherkin\\n- Write step definitions that map the steps to the code\\n- Run the feature files and verify the results\",\n        \"user_id\": 1,\n        \"date\": \"2021-11-27T16:47:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 49,\n        \"title\": \"The principles of agile software development\",\n        \"body\": \"Agile software development is based on four core values and twelve principles that guide the way software is developed and delivered. The four core values are:\\n- Individuals and interactions over processes and tools\\n- Working software over comprehensive documentation\\n- Customer collaboration over contract negotiation\\n- Responding to change over following a plan.\\n\\nThe twelve principles are:\\n- Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\\n- Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\\n- Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\\n- Business people and developers must work together daily throughout the project.\\n- Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\\n- The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\\n- Working software is the primary measure of progress.\\n- Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\\n- Continuous attention to technical excellence and good design enhances agility.\\n- Simplicity--the art of maximizing the amount of work not done--is essential.\",\n        \"user_id\": 2,\n        \"date\": \"2017-11-23T21:05:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 50,\n        \"title\": \"How to use JMeter for performance testing\",\n        \"body\": \"JMeter is a powerful open-source tool for testing the performance of web applications. JMeter can be used to simulate various load scenarios, measure response times, throughput, errors, etc., and generate reports and graphs. To use JMeter for performance testing, you need to:\\n- Install JMeter and configure it according to your needs\\n- Create a test plan that defines the test objectives, parameters, logic, etc.\\n- Add thread groups that represent the number of users or requests\\n- Add samplers that send requests to the target server\\n- Add listeners that collect and display the test results\",\n        \"user_id\": 5,\n        \"date\": \"2014-07-27T18:03:46Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 51,\n        \"title\": \"The difference between Scrum and Kanban\",\n        \"body\": \"Scrum and Kanban are two agile methods that share some common principles and practices, such as iterative and incremental delivery, visualization of work, and collaboration among team members. However, they also have some key differences, such as:\\n- Scrum uses fixed-length sprints, while Kanban uses a continuous flow of work\\n- Scrum prescribes roles, events, artifacts, and rules, while Kanban is more flexible and adaptable\\n- Scrum limits work in progress (WIP) by sprint capacity, while Kanban limits WIP by column or lane\\n- Scrum focuses on delivering potentially shippable increments of value, while Kanban focuses on optimizing the flow of value\",\n        \"user_id\": 3,\n        \"date\": \"2012-02-04T04:14:46Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\andrew-svk-nQvFebPtqbw-unsplash.jpg\"\n    },\n    {\n        \"id\": 52,\n        \"title\": \"What is continuous testing?\",\n        \"body\": \"Continuous testing is a software testing practice that involves testing code continuously throughout the software development life cycle. Continuous testing helps ensure that the code meets the quality standards and requirements at every stage of development. Continuous testing also enables faster feedback and delivery of value to the customer. To implement continuous testing, you need to: \\n- Integrate testing into the CI/CD pipeline\\n- Use automation tools and frameworks to execute tests \\n- Perform different types of tests, such as unit, integration, functional, performance, etc.\\n- Monitor and analyze the test results and metrics\",\n        \"user_id\": 3,\n        \"date\": \"2015-12-30T16:13:43Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 53,\n        \"title\": \"How to write a good bug report\",\n        \"body\": \"A bug report is a document that describes a defect or error in a software product. A good bug report can help developers identify and fix the problem quickly and efficiently. Here are some tips for writing a good bug report:\\n- Use a clear and descriptive title\\n- Include the steps to reproduce the bug\\n- Provide the expected and actual results\\n- Attach screenshots, videos, logs, or other relevant information\\n- Specify the environment and version of the software\\n- Assign a priority and severity level to the bug\",\n        \"user_id\": 4,\n        \"date\": \"2020-09-26T08:38:47Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 54,\n        \"title\": \"The benefits of Scrum methodology\",\n        \"body\": \"Scrum is an agile framework that organizes software development into short iterations called sprints. Scrum uses roles, events, artifacts, and rules to guide the team and deliver value to the customer. Some of the benefits of Scrum are:\\n- Increased transparency and visibility of the project status\\n- Improved communication and collaboration among the team members\\n- Enhanced adaptability and flexibility to changing requirements\\n- Reduced waste and risk of failure\\n- Higher customer satisfaction and trust\",\n        \"user_id\": 9,\n        \"date\": \"2013-03-05T20:29:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 55,\n        \"title\": \"What is continuous integration?\",\n        \"body\": \"Continuous integration (CI) is a software development practice that involves building and testing code frequently and automatically. CI helps detect and fix errors early in the development cycle, improving the quality and reliability of the code. CI also enables faster feedback and collaboration among developers. To implement CI, you need to:\\n- Use a version control system to manage your code\\n- Use a CI server or tool to automate the build and test process\\n- Write unit tests and code coverage tools to verify your code\\n- Follow a coding standard and style guide\",\n        \"user_id\": 8,\n        \"date\": \"2016-04-25T14:38:34Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 56,\n        \"title\": \"What is test-driven development?\",\n        \"body\": \"Test-driven development (TDD) is a software development technique that involves writing tests before writing code. TDD follows a cycle of three steps:\\n- Write a failing test for a feature or functionality\\n- Write the minimum amount of code to make the test pass\\n- Refactor the code to improve its quality and readability TDD helps developers create clean, robust, and reliable code that meets the requirements. TDD also helps developers avoid over-engineering or under-engineering their solutions.\",\n        \"user_id\": 4,\n        \"date\": \"2013-06-21T13:18:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 57,\n        \"title\": \"Myth: Testing is only for finding bugs\",\n        \"body\": \"This is a common myth that assumes that testing is only a negative activity that aims to find faults or errors in the software. However, testing is much more than that. Testing is also a positive activity that aims to verify and validate the functionality, performance, usability, security, etc., of the software. Testing can also help improve the design and structure of the code, facilitate refactoring and maintenance of the code, support documentation and knowledge sharing of the code, enhance customer satisfaction and trust, reduce development and maintenance costs, comply with standards and regulations, etc.\",\n        \"user_id\": 10,\n        \"date\": \"2023-04-18T13:18:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 58,\n        \"title\": \"Myth: Testing can be done by anyone\",\n        \"body\": \"This is a common myth that assumes that testing is an easy and simple activity that does not require any skills or expertise. However, testing is a complex and challenging activity that requires a combination of technical and soft skills. Some of the skills required for testing are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 10,\n        \"date\": \"2023-02-18T11:13:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 59,\n        \"title\": \"Myth: Testing is only done at the end of development\",\n        \"body\": \"This is a common myth that assumes that testing is only a final activity that occurs after the development is completed. However, testing is an ongoing activity that occurs throughout the software development life cycle. Testing can be done at different levels, such as unit testing, integration testing, system testing, acceptance testing, etc. Testing can also be done at different stages, such as planning, design, implementation, deployment, etc. Testing can also be done in different ways, such as static testing, dynamic testing, manual testing, automated testing, etc.\",\n        \"user_id\": 10,\n        \"date\": \"2022-12-24T11:13:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    }\n]"
								}
							]
						}
					],
					"id": "1e2d1594-0f3d-4cf0-a678-e246144e9aca"
				},
				{
					"name": "Get all articles - negative",
					"item": [
						{
							"name": "Get all articles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc7e7c67-ced8-414e-8ac6-c641a25ac9d3",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response is an array with at least one element\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    pm.expect(responseData).to.have.lengthOf.at.least(1);",
											"});",
											"",
											"",
											"pm.test(\"Each article has the required fields\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData).to.be.an('array');",
											"  responseData.forEach(function (article) {",
											"    pm.expect(article).to.have.property('id');",
											"    pm.expect(article).to.have.property('title');",
											"    pm.expect(article).to.have.property('body');",
											"    pm.expect(article).to.have.property('user_id');",
											"    pm.expect(article).to.have.property('date');",
											"    pm.expect(article).to.have.property('image');",
											"  });",
											"});",
											"",
											"",
											"pm.test(\"Id is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('array');",
											"    ",
											"    responseData.forEach(function(article) {",
											"        pm.expect(article.id).to.be.a('number').and.to.be.greaterThan(-1, \"Id should be a non-negative integer\");",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"user_id is a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
											"",
											"    responseData.forEach(function (article) {",
											"        pm.expect(article.user_id).to.be.a('number').and.to.be.at.least(0);",
											"    });",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "08b78f38-50f5-4016-9b4b-3a6fc307f91e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/articles"
							},
							"response": [
								{
									"id": "174092e9-232f-4926-8160-148241b79add",
									"name": "Get all articles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/articles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 28 Sep 2023 18:00:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "80dde2288b993bc9-WAW"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"c976-YtZYZD9TkcBGX5XVjF5UHD8M1uw\""
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "Vary",
											"value": "Origin, Accept-Encoding"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "content-security-policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "cross-origin-embedder-policy",
											"value": "require-corp"
										},
										{
											"key": "cross-origin-opener-policy",
											"value": "same-origin"
										},
										{
											"key": "cross-origin-resource-policy",
											"value": "same-origin"
										},
										{
											"key": "origin-agent-cluster",
											"value": "?1"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "referrer-policy",
											"value": "no-referrer"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-dns-prefetch-control",
											"value": "off"
										},
										{
											"key": "x-download-options",
											"value": "noopen"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-permitted-cross-domain-policies",
											"value": "none"
										},
										{
											"key": "x-render-origin-server",
											"value": "Render"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										},
										{
											"key": "alt-svc",
											"value": "h3=\":443\"; ma=86400"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n    {\n        \"id\": 1,\n        \"title\": \"How to write effective test cases\",\n        \"body\": \"Test cases are the backbone of any testing process. They define what to test, how to test, and what to expect. Writing effective test cases can save time, effort, and resources. Here are some tips for writing effective test cases:\\n- Use clear and concise language\\n- Follow a consistent format and structure\\n- Include preconditions, steps, expected results, and postconditions\\n- Cover positive, negative, and boundary scenarios\\n- Prioritize test cases based on risk and importance\\n- Review and update test cases regularly\",\n        \"user_id\": 1,\n        \"date\": \"2021-07-13T16:35:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Benefits of continuous integration and delivery\",\n        \"body\": \"Continuous integration (CI) and continuous delivery (CD) are practices that aim to improve the quality and speed of software development. CI involves building and testing code frequently and automatically. CD involves deploying code to production environments quickly and reliably. Some of the benefits of CI/CD are:\\n- Faster feedback and bug detection\\n- Reduced integration conflicts and errors\\n- Higher code quality and security\\n- Shorter release cycles and time to market\\n- Increased customer satisfaction and trust\",\n        \"user_id\": 2,\n        \"date\": \"2020-06-15T11:12:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\christian-cueni-Us3TUHxMl3U-unsplash.jpg\"\n    },\n    {\n        \"id\": 3,\n        \"title\": \"What is agile software development?\",\n        \"body\": \"Agile software development is a set of principles and practices that emphasize collaboration, flexibility, and customer value. Agile software development is based on the Agile Manifesto, which states:\\n- Individuals and interactions over processes and tools\\n- Working software over comprehensive documentation\\n- Customer collaboration over contract negotiation\\n- Responding to change over following a plan Agile software development uses iterative and incremental methods, such as Scrum, Kanban, or XP, to deliver software in small batches.\",\n        \"user_id\": 3,\n        \"date\": \"2021-07-25T13:34:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"title\": \"How to use Selenium for web automation\",\n        \"body\": \"Selenium is a popular open-source tool for automating web browsers. Selenium can be used to perform various tasks on web applications, such as filling forms, clicking buttons, navigating pages, verifying content, etc. Selenium supports multiple languages, such as Java, Python, C#, Ruby, etc., and multiple browsers, such as Chrome, Firefox, Edge, etc. To use Selenium for web automation, you need to:\\n- Install Selenium WebDriver and a browser driver\\n- Write a script that interacts with web elements using locators\\n- Run the script and verify the results\",\n        \"user_id\": \"3\",\n        \"date\": \"2021-10-16T17:59:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\",\n        \"id\": 4\n    },\n    {\n        \"id\": 5,\n        \"title\": \"Software quality assurance vs software testing\",\n        \"body\": \"Software quality assurance (SQA) and software testing are two related but distinct activities that aim to ensure the quality of software products. SQA is a proactive process that involves planning, designing, implementing, and monitoring quality standards and processes throughout the software development life cycle. Software testing is a reactive process that involves checking, verifying, and validating the functionality, performance, usability, security, etc., of software products against the requirements. SQA prevents defects while testing detects defects.\",\n        \"user_id\": 3,\n        \"date\": \"2021-05-01T19:34:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 6,\n        \"title\": \"Best practices for code reviews\",\n        \"body\": \"Code reviews are an essential part of software development that help improve the quality, readability, maintainability, and security of code. Code reviews also foster knowledge sharing, collaboration, and learning among developers. Here are some best practices for code reviews:\\n- Define clear goals and expectations for code reviews\\n- Use a code review tool or platform that facilitates communication and feedback\\n- Review code in small chunks and focus on the most important issues\\n- Provide constructive, respectful, and specific comments\\n- Follow up on the comments and resolve them promptly\",\n        \"user_id\": 1,\n        \"date\": \"2021-01-01T11:21:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 7,\n        \"title\": \"What is test-driven development?\",\n        \"body\": \"Test-driven development (TDD) is a software development technique that involves writing tests before writing code. TDD follows a cycle of three steps:\\n- Write a failing test for a feature or functionality\\n- Write the minimum amount of code to make the test pass\\n- Refactor the code to improve its quality and readability TDD helps developers create clean, robust, and reliable code that meets the requirements. TDD also helps developers avoid over-engineering or under-engineering their solutions.\",\n        \"user_id\": 1,\n        \"date\": \"2020-01-01T11:42:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\andrew-svk-nQvFebPtqbw-unsplash.jpg\"\n    },\n    {\n        \"id\": 8,\n        \"title\": \"What are the responsibilities of a tester?\",\n        \"body\": \"A tester is someone who performs testing tasks on software products to ensure their quality and functionality. A tester has the following responsibilities:\\n- Analyze and understand the requirements and expectations of the software\\n- Plan and design test cases, scenarios, data, scripts, etc.\\n- Execute test cases and record test results\\n- Identify and report defects or errors in the software\\n- Verify and validate the fixes or changes in the software\\n- Communicate and collaborate with developers, stakeholders, customers, etc.\",\n        \"user_id\": 1,\n        \"date\": \"2018-08-27T07:30:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 9,\n        \"title\": \"What are the responsibilities of a QA engineer?\",\n        \"body\": \"A QA engineer is someone who performs quality assurance tasks on software products to ensure their quality and reliability. A QA engineer has the following responsibilities:\\n- Define and implement quality standards and processes throughout the software development life cycle\\n- Monitor and measure the quality of the software products and processes\\n- Perform audits and reviews on the software products and processes\\n- Identify and report quality issues or risks in the software products and processes\\n- Provide guidance and support to the development team and the organization on quality matters\",\n        \"user_id\": 7,\n        \"date\": \"2019-11-20T01:49:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 10,\n        \"title\": \"What are the skills of a tester?\",\n        \"body\": \"A tester is someone who performs testing tasks on software products to ensure their quality and functionality. A tester needs to have a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a tester are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 4,\n        \"date\": \"2016-11-27T15:34:44Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 11,\n        \"title\": \"What are the skills of a QA engineer?\",\n        \"body\": \"A QA engineer is someone who performs quality assurance tasks on software products to ensure their quality and reliability. A QA engineer needs to have a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a QA engineer are:\\n- Analytical and logical thinking: to define and implement quality standards and processes\\n- Attention to detail: to monitor and measure the quality of the software products and processes\\n- Communication and collaboration: to communicate and report quality issues or risks to developers, stakeholders, customers, etc.\\n- Curiosity and creativity: to identify and suggest improvements or solutions for quality matters\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 2,\n        \"date\": \"2021-01-15T05:54:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 12,\n        \"title\": \"What are the tools used by QA engineers?\",\n        \"body\": \"QA engineers use various tools to automate or simplify their quality assurance tasks, such as quality planning, monitoring, measuring, auditing, reporting, etc. There are many tools available for QA engineers, depending on the type, purpose, and scope of quality assurance. Some of the popular tools used by QA engineers are:\\n- SonarQube: for code quality analysis\\n- Cucumber: for behavior-driven development\\n- Zephyr: for test management\\n- Mantis: for bug tracking and project management\\n- Jenkins: for continuous integration\",\n        \"user_id\": 1,\n        \"date\": \"2021-06-09T16:19:49Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\mahdikordi-4hCYZT_zPu8-unsplash.jpg\"\n    },\n    {\n        \"id\": 13,\n        \"title\": \"What are the differences between testers and QA engineers?\",\n        \"body\": \"Testers and QA engineers are both involved in ensuring the quality of software products, but they have some differences in their roles, responsibilities, and skills. Some of the differences are: \\n- Testers focus on verifying the functionality and performance of the software products, while QA engineers focus on defining and implementing quality standards and processes throughout the software development life cycle.\\n- Testers design and execute test cases, identify and report defects, and verify and validate fixes or changes in the software products, while QA engineers monitor and measure the quality of the software products and processes, perform audits and reviews, and identify and report quality issues or risks.\\n- Testers need to have skills such as analytical and logical thinking, attention to detail, communication and collaboration, curiosity and creativity, learning and adaptability, while QA engineers need to have skills such as analytical and logical thinking, attention to detail, communication and collaboration, curiosity and creativity, learning and adaptability, as well as quality planning, monitoring, measuring, auditing, reporting, etc.\",\n        \"user_id\": 3,\n        \"date\": \"2016-10-31T11:55:41Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 14,\n        \"title\": \"What are some examples of software design patterns?\",\n        \"body\": \"There are many types and categories of software design patterns, depending on the problem domain, scope, and level of abstraction. Some of the common types and examples of software design patterns are:\\n- Creational patterns: deal with the creation and instantiation of objects. Examples are Singleton, Factory, Builder, Prototype, etc.\\n- Structural patterns: deal with the composition and arrangement of objects. Examples are Adapter, Bridge, Composite, Decorator, Facade, Proxy, etc.\\n- Behavioral patterns: deal with the interaction and communication of objects. Examples are Chain of Responsibility, Command, Iterator, Mediator, Observer, Strategy, Template Method, etc.\",\n        \"user_id\": 3,\n        \"date\": \"2015-04-25T15:45:08Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 15,\n        \"title\": \"What are software design patterns and why use them?\",\n        \"body\": \"Software design patterns are general and reusable solutions to common problems that occur in software design. Software design patterns are not ready-made code, but rather templates or guidelines that can be adapted and applied to different situations. Software design patterns can help:\\n- Improve the quality and maintainability of the software\\n- Simplify the communication and collaboration among developers\\n- Reduce the complexity and redundancy of the code\\n- Promote good practices and principles of software design\",\n        \"user_id\": 6,\n        \"date\": \"2020-06-07T22:59:33Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 16,\n        \"title\": \"What is software quality and how to measure it?\",\n        \"body\": \"Software quality is the degree to which a software product meets the requirements and expectations of the customer and the stakeholders. Software quality can be measured by various criteria, such as:\\n- Functionality: the ability of the software to perform the functions and features that it is supposed to do\\n- Performance: the efficiency and speed of the software under different conditions and loads\\n- Usability: the ease of use and learnability of the software for the users\\n- Reliability: the consistency and dependability of the software over time and across situations\\n- Security: the protection of the software from unauthorized access, modification, or damage\\n- Maintainability: the ease of modifying and updating the software to fix defects or add new features\",\n        \"user_id\": 6,\n        \"date\": \"2017-12-31T01:14:02Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 17,\n        \"title\": \"What are the types of software quality assurance activities?\",\n        \"body\": \"Software quality assurance activities are the tasks that help ensure the quality of software products. Software quality assurance activities can be classified into different types based on various criteria, such as:\\n- The level of testing: unit testing, integration testing, system testing, acceptance testing\\n- The purpose of testing: functional testing, non-functional testing, regression testing, smoke testing\\n- The technique of testing: black-box testing, white-box testing, gray-box testing\\n- The timing of testing: static testing, dynamic testing\\n- The degree of automation: manual testing, automated testing\",\n        \"user_id\": 3,\n        \"date\": \"2018-10-17T12:56:37Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 18,\n        \"title\": \"What are the skills of a good software quality assurance engineer?\",\n        \"body\": \"A good software quality assurance engineer is someone who has a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a good software quality assurance engineer are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 4,\n        \"date\": \"2015-02-04T07:48:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 19,\n        \"title\": \"What is software quality assurance and why is it important?\",\n        \"body\": \"Software quality assurance (SQA) is a proactive process that involves planning, designing, implementing, and monitoring quality standards and processes throughout the software development life cycle. SQA is important because it helps:\\n- Ensure the quality and reliability of the software\\n- Prevent defects and errors in the software\\n- Enhance customer satisfaction and trust\\n- Reduce development and maintenance costs\\n- Comply with standards and regulations\",\n        \"user_id\": 1,\n        \"date\": \"2017-09-08T03:41:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 20,\n        \"title\": \"What is continuous integration and why use it?\",\n        \"body\": \"Continuous integration (CI) is a software development practice that involves building and testing code frequently and automatically. CI helps detect and fix errors early in the development cycle, improving the quality and reliability of the code. CI also enables faster feedback and collaboration among developers. Some of the reasons to use CI are:\\n- Faster feedback and bug detection\\n- Reduced integration conflicts and errors\\n- Higher code quality and security\\n- Shorter release cycles and time to market\\n- Increased customer satisfaction and trust\",\n        \"user_id\": 3,\n        \"date\": \"2016-05-15T13:48:36Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 21,\n        \"title\": \"The tools used for end-to-end testing\",\n        \"body\": \"End-to-end testing tools are software applications that help create and run end-to-end tests. End-to-end testing tools provide features such as web automation, browser drivers, page objects, data-driven techniques, etc. There are many tools available for end-to-end testing, depending on the type, scope, and complexity of end-to-end scenarios. Some of the popular tools used for end-to-end testing are:\\n- Playwright: for web automation\\n- Selenium: for web automation\\n- Cypress: for web automation\\n- Appium: for mobile automation\\n- Postman: for API testing\\n- Puppeteer: for headless browser automation\",\n        \"user_id\": 7,\n        \"date\": \"2015-01-15T01:48:39Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 22,\n        \"title\": \"The challenges of unit testing\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has some challenges, such as:\\n- Choosing the right level of granularity and scope for unit testing\\n- Writing testable and modular code that follows the single responsibility principle\\n- Isolating dependencies and side effects using mocks, stubs, or fakes\\n- Measuring and improving code coverage and test quality\\n- Balancing the trade-off between unit testing and other types of testing\",\n        \"user_id\": 1,\n        \"date\": \"2015-11-10T12:16:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 23,\n        \"title\": \"The benefits of unit testing\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has many benefits, such as:\\n- Improving the quality and reliability of the code\\n- Detecting and fixing defects early in the development cycle\\n- Enhancing the design and structure of the code\\n- Facilitating refactoring and maintenance of the code\\n- Supporting documentation and knowledge sharing of the code\",\n        \"user_id\": 2,\n        \"date\": \"2017-05-06T04:52:16Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\h-ng-nguy-n-0iGK9zCA7Ak-unsplash.jpg\"\n    },\n    {\n        \"id\": 24,\n        \"title\": \"The challenges of end-to-end testing\",\n        \"body\": \"End-to-end testing is a complex and time-consuming process that involves many challenges, such as:\\n- High cost and effort of creating and maintaining end-to-end tests\\n- Low speed and reliability of running end-to-end tests\\n- High dependency on external factors, such as network, browser, environment, etc.\\n- Difficulty in debugging and isolating failures in end-to-end tests\\n- Low coverage and value of end-to-end tests compared to other types of tests\",\n        \"user_id\": 1,\n        \"date\": \"2021-08-23T14:19:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 25,\n        \"title\": \"How to write good end-to-end tests\",\n        \"body\": \"End-to-end tests are tests that verify the functionality and behavior of the whole system or application. End-to-end tests are the top layer of the test pyramid and should be comprehensive, realistic, and valuable. Here are some tips for writing good end-to-end tests:\\n- Use a testing framework and a tool to create and run end-to-end tests\\n- Follow a naming convention and a structure for end-to-end tests\\n- Write one user story per end-to-end test\\n- Use meaningful and descriptive names for end-to-end tests\\n- Cover critical user journeys and business flows for each user story\\n- Use page objects and data-driven techniques to simplify end-to-end tests\",\n        \"user_id\": 3,\n        \"date\": \"2022-03-15T10:10:51Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 26,\n        \"title\": \"How to write good integration tests\",\n        \"body\": \"Integration tests are tests that verify the interaction and integration of multiple units or components of code. Integration tests are the middle layer of the test pyramid and should be reliable, consistent, and realistic. Here are some tips for writing good integration tests:\\n- Use a testing framework and a mocking library to create and run integration tests\\n- Follow a naming convention and a structure for integration tests\\n- Write one scenario per integration test\\n- Use meaningful and descriptive names for integration tests\\n- Cover happy path, alternative path, and exception path for each scenario\\n- Manage test data and environments carefully\",\n        \"user_id\": 5,\n        \"date\": \"2019-12-28T21:44:06Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-ooNuyiU4d3w-unsplash.jpg\"\n    },\n    {\n        \"id\": 27,\n        \"title\": \"What are the advantages and disadvantages of end-to-end testing?\",\n        \"body\": \"End-to-end testing is the process of verifying the functionality and behavior of the whole system or application. End-to-end testing is the top layer of the test pyramid and has some advantages and disadvantages. Some of the advantages are:\\n- Provides a comprehensive and realistic view of the software\\n- Detects system-level issues that may not be found by other types of testing\\n- Enhances customer satisfaction and trust Some of the disadvantages are:\\n- Requires high cost and effort to create and maintain end-to-end tests\\n- Has low speed and reliability compared to other types of testing\\n- Has high dependency on external factors, such as network, browser, environment, etc.\",\n        \"user_id\": 4,\n        \"date\": \"2021-04-20T02:44:13Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-ooNuyiU4d3w-unsplash.jpg\"\n    },\n    {\n        \"id\": 28,\n        \"title\": \"How to improve software quality and testing?\",\n        \"body\": \"Software quality and testing are critical activities that affect the success and satisfaction of software products. Software quality and testing can be improved by following some tips, such as:\\n- Understand the requirements and expectations clearly and align them with the test objectives, strategy, and scope\\n- Use the test pyramid model to balance the speed, cost, and coverage of testing\\n- Use automation tools and frameworks where appropriate to simplify and speed up testing tasks\\n- Follow a coding standard and style guide for test scripts to ensure consistency and readability\\n- Document and report test results and defects clearly and accurately\\n- Review and update test cases regularly to ensure their relevance and validity\\n- Perform different types of tests based on risk and importance\\n- Define and implement quality standards and processes throughout the software development life cycle\\n- Monitor and measure the quality of the software products and processes\\n- Perform audits and reviews on the software products and processes\",\n        \"user_id\": 7,\n        \"date\": \"2016-12-26T06:44:52Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 29,\n        \"title\": \"What are some common software quality issues?\",\n        \"body\": \"Software quality issues are problems or defects that affect the quality and functionality of software products. Software quality issues can have various causes, impacts, and solutions. Some of the common software quality issues are:\\n- Functional issues: the software does not perform the functions or features that it is supposed to do or does not meet the requirements or expectations\\n- Performance issues: the software is slow, inefficient, or unstable under different conditions or loads\\n- Usability issues: the software is difficult to use or learn for the users or does not meet their needs or preferences\\n- Reliability issues: the software is inconsistent or unreliable over time or across situations\\n- Security issues: the software is vulnerable to unauthorized access, modification, or damage\",\n        \"user_id\": 5,\n        \"date\": \"2018-07-18T00:39:00Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 30,\n        \"title\": \"How to write good unit tests\",\n        \"body\": \"Unit tests are tests that verify the functionality of individual units or components of code. Unit tests are the foundation of the test pyramid and should be fast, isolated, and independent. Here are some tips for writing good unit tests:\\n- Use a testing framework and a mocking library to create and run unit tests\\n- Follow a naming convention and a structure for unit tests\\n- Write one assertion per unit test\\n- Use meaningful and descriptive names for unit tests\\n- Cover positive, negative, and edge cases for each unit\\n- Refactor and optimize unit tests regularly\",\n        \"user_id\": 1,\n        \"date\": \"2016-10-09T13:50:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\mahdikordi-4hCYZT_zPu8-unsplash.jpg\"\n    },\n    {\n        \"id\": 31,\n        \"title\": \"What are the advantages and disadvantages of unit testing?\",\n        \"body\": \"Unit testing is the process of verifying the functionality of individual units or components of code. Unit testing is the foundation of the test pyramid and has some advantages and disadvantages. Some of the advantages are:\\n- Improves the quality and reliability of the code\\n- Detects and fixes defects early in the development cycle\\n- Enhances the design and structure of the code\\n- Facilitates refactoring and maintenance of the code\\n- Supports documentation and knowledge sharing of the code Some of the disadvantages are:\\n- Requires extra time and effort to write and maintain unit tests\\n- May not cover all scenarios and aspects of the software\\n- May not detect integration or system-level issues\",\n        \"user_id\": 5,\n        \"date\": \"2018-07-16T10:15:26Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 32,\n        \"title\": \"What is the test pyramid and why use it?\",\n        \"body\": \"The test pyramid is a model that illustrates the optimal distribution of different types of tests in a software project. The test pyramid consists of three layers:\\n- Unit tests: tests that verify the functionality of individual units or components of code\\n- Integration tests: tests that verify the interaction and integration of multiple units or components of code\\n- End-to-end tests: tests that verify the functionality and behavior of the whole system or application The test pyramid helps to:\\n- Balance the speed, cost, and coverage of testing\\n- Reduce the dependency and maintenance of testing\\n- Increase the reliability and confidence of testing\",\n        \"user_id\": 3,\n        \"date\": \"2018-08-08T02:22:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 33,\n        \"title\": \"What are the phases of software testing life cycle?\",\n        \"body\": \"Software testing life cycle (STLC) is a sequence of activities that guide the planning, execution, and reporting of software testing. The phases of STLC are:\\n- Requirement analysis: analyze and understand the requirements and scope of testing\\n- Test planning: define the test objectives, strategy, resources, schedule, etc.\\n- Test design: create test cases, scenarios, data, scripts, etc.\\n- Test environment setup: prepare and configure the hardware, software, network, etc., required for testing\\n- Test execution: run the test cases and record the results\\n- Test closure: evaluate the test results and report the outcomes\",\n        \"user_id\": 4,\n        \"date\": \"2020-04-12T02:17:51Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 34,\n        \"title\": \"What are the skills of a good software tester?\",\n        \"body\": \"A good software tester is someone who has a combination of technical and soft skills that enable them to perform their tasks effectively and efficiently. Some of the skills of a good software tester are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 3,\n        \"date\": \"2021-09-13T01:47:45Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 35,\n        \"title\": \"What is software testing and why is it important?\",\n        \"body\": \"Software testing is the process of checking, verifying, and validating the functionality, performance, usability, security, etc., of software products against the requirements and expectations. Software testing is important because it helps:\\n- Ensure the quality and reliability of the software\\n- Detect and fix defects or errors in the software\\n- Enhance customer satisfaction and trust\\n- Reduce development and maintenance costs\\n- Comply with standards and regulations\",\n        \"user_id\": 1,\n        \"date\": \"2022-05-20T05:38:12Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 36,\n        \"title\": \"What are the types of software testing?\",\n        \"body\": \"Software testing can be classified into different types based on various criteria, such as: \\n- The level of testing: unit testing, integration testing, system testing, acceptance testing\\n- The purpose of testing: functional testing, non-functional testing, regression testing, smoke testing \\n- The technique of testing: black-box testing, white-box testing, gray-box testing\\n- The timing of testing: static testing, dynamic testing\\n- The degree of automation: manual testing, automated testing\",\n        \"user_id\": 3,\n        \"date\": \"2020-07-29T14:14:41Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 37,\n        \"title\": \"What is Playwright and why use it?\",\n        \"body\": \"Playwright is a tool that enables reliable and fast end-to-end testing of web applications. Playwright can be used to automate various tasks on web applications, such as filling forms, clicking buttons, navigating pages, verifying content, etc. Playwright supports multiple languages, such as JavaScript, Python, Java, etc., and multiple browsers, such as Chrome, Firefox, Edge, etc. Some of the reasons to use Playwright are:\\n- It provides a consistent and fluent API across browsers\\n- It handles dynamic and complex web elements\\n- It supports parallel and headless testing\\n- It integrates with popular testing frameworks and tools\",\n        \"user_id\": 4,\n        \"date\": \"2022-07-05T13:20:17Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 38,\n        \"title\": \"The benefits of agile software development\",\n        \"body\": \"Agile software development is a set of principles and practices that emphasize collaboration, flexibility,and customer value. Agile software development has many benefits, such as:\\n- Faster delivery of value to the customer\\n- Improved quality and reliability of the software\\n- Increased responsiveness and adaptability to changing requirements\\n- Enhanced communication and collaboration among the team and the stakeholders\\n- Higher customer satisfaction and trust\\n- Greater innovation and creativity\\n- Reduced waste and risk\",\n        \"user_id\": 2,\n        \"date\": \"2015-04-15T14:58:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\hena-sheikh-jpoUR0PGk_0-unsplash.jpg\"\n    },\n    {\n        \"id\": 39,\n        \"title\": \"The events of Scrum framework\",\n        \"body\": \"Scrum is an agile framework that uses five events to organize and manage software development. The five events are:\\n- Sprint: a time-boxed period (usually 2-4 weeks) in which the team delivers a potentially shippable increment of value\\n- Sprint planning: a meeting at the beginning of a sprint where the team plans what to deliver and how to deliver it\\n- Daily Scrum: a short (15 minutes) daily meeting where the team members synchronize their work and progress\\n- Sprint review: a meeting at the end of a sprint where the team demonstrates the increment and receives feedback from the stakeholders\\n- Sprint retrospective: a meeting after the sprint review where the team inspects and improves their process\",\n        \"user_id\": 6,\n        \"date\": \"2022-09-05T12:23:14Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\chuttersnap-9cCeS9Sg6nU-unsplash.jpg\"\n    },\n    {\n        \"id\": 40,\n        \"title\": \"The challenges of test automation\",\n        \"body\": \"Test automation is the use of software tools or scripts to perform testing tasks that are otherwise manual, repetitive, or time-consuming. Test automation has many benefits, but it also comes with some challenges, such as:\\n- Selecting the right tool or framework for the project\\n- Designing and maintaining robust and reusable test cases\\n- Handling dynamic or complex web elements\\n- Dealing with synchronization issues and timeouts\\n- Managing test data and environments\\n- Integrating test automation with CI/CD pipeline\\n- Measuring and improving test automation ROI\",\n        \"user_id\": 7,\n        \"date\": \"2021-08-30T17:55:10Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-BulYN_Vs_dw-unsplash.jpg\"\n    },\n    {\n        \"id\": 41,\n        \"title\": \"The artifacts of Scrum framework\",\n        \"body\": \"Scrum is an agile framework that uses three artifacts to manage and deliver software products. The three artifacts are:\\n- Product backlog: a prioritized list of features and requirements that provide value to the customer\\n- Sprint backlog: a subset of the product backlog that the team commits to deliver in a sprint\\n- Increment: a potentially shippable piece of software that meets the definition of done and adds value to the product The artifacts are transparent and inspectable by the team and the stakeholders. The artifacts are also adaptable and refined based on feedback and changes.\",\n        \"user_id\": 2,\n        \"date\": \"2021-10-20T23:44:27Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 42,\n        \"title\": \"How to use Jenkins for continuous integration\",\n        \"body\": \"Jenkins is a widely used open-source tool for continuous integration (CI), which is a software development practice that involves building and testing code frequently and automatically. Jenkins can be used to automate various tasks in the CI pipeline, such as:\\n- Triggering builds based on code changes or schedules\\n- Running tests and code analysis tools\\n- Reporting test results and code quality metrics\\n- Deploying code to different environments\\n- Sending notifications and alerts\\n\\nTo use Jenkins for CI, you need to:\\n- Install Jenkins and configure it according to your needs\\n- Create jobs that define the tasks to be performed\\n- Add plugins that extend the functionality of Jenkins\\n- Configure build triggers, parameters, steps, etc.\\n- Run the jobs and monitor the results\",\n        \"user_id\": 1,\n        \"date\": \"2019-05-17T22:20:36Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 43,\n        \"title\": \"The difference between agile and waterfall methodologies\",\n        \"body\": \"Agile and waterfall are two contrasting software development methodologies that differ in their approach, philosophy, and practices. Agile is an iterative and incremental method that delivers software in small batches with frequent feedback and changes. Waterfall is a linear and sequential method that delivers software in one large batch with predefined requirements and specifications. Some of the differences between agile and waterfall are:\\n- Agile is adaptive and flexible, while waterfall is predictive and rigid\\n- Agile is customer-centric and collaborative, while waterfall is contract-centric and siloed\\n- Agile is empirical and experimental, while waterfall is analytical and planned\",\n        \"user_id\": 6,\n        \"date\": \"2019-07-14T12:26:14Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\h-ng-nguy-n-0iGK9zCA7Ak-unsplash.jpg\"\n    },\n    {\n        \"id\": 44,\n        \"title\": \"What is the test pyramid and how to use it?\",\n        \"body\": \"The test pyramid is a model that illustrates the optimal distribution of different types of tests in a software project. The test pyramid consists of three layers:\\n- Unit tests: tests that verify the functionality of individual units or components of code\\n- Integration tests: tests that verify the interaction and integration of multiple units or components of code\\n- End-to-end tests: tests that verify the functionality and behavior of the whole system or application The test pyramid helps to:\\n- Balance the speed, cost, and coverage of testing\\n- Reduce the dependency and maintenance of testing\\n- Increase the reliability and confidence of testing To use the test pyramid, you need to:\\n- Write more unit tests than integration tests, and more integration tests than end-to-end tests\\n- Use automation tools and frameworks for each layer of testing\\n- Run unit tests frequently and locally, integration tests occasionally and remotely, and end-to-end tests rarely and remotely\",\n        \"user_id\": 7,\n        \"date\": \"2015-08-30T01:42:31Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 45,\n        \"title\": \"How to use Postman for API testing\",\n        \"body\": \"Postman is a popular tool for testing APIs (application programming interfaces). Postman can be used to send requests, receive responses, validate data, run tests, create reports, etc. To use Postman for API testing, you need to:\\n- Install Postman and create an account\\n- Create a collection that groups related requests\\n- Add requests to the collection with the URL, method, parameters, headers, body, etc.\\n- Add tests to the requests using JavaScript or Postman's built-in snippets\\n- Run the requests individually or as a collection and verify the results\",\n        \"user_id\": 5,\n        \"date\": \"2022-09-03T12:38:55Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\rory-mckeever-w0kMi0osklU-unsplash.jpg\"\n    },\n    {\n        \"id\": 46,\n        \"title\": \"The advantages of test automation\",\n        \"body\": \"Test automation is the use of software tools or scripts to perform testing tasks that are otherwise manual, repetitive, or time-consuming. Test automation has many advantages, such as:\\n- Increased test coverage and accuracy\\n- Reduced testing time and cost\\n- Improved testing efficiency and productivity\\n- Enhanced testing reliability and consistency\\n- Faster feedback and bug detection \\n- Higher customer satisfaction and quality\",\n        \"user_id\": 7,\n        \"date\": \"2015-04-20T17:13:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 47,\n        \"title\": \"The roles and responsibilities of a Scrum Master\",\n        \"body\": \"A Scrum Master is a servant-leader who facilitates and coaches the Scrum team and the organization in applying Scrum. A Scrum Master has the following roles and responsibilities:\\n- Ensure that the team understands and follows Scrum values, principles, and practices\\n- Remove impediments and obstacles that hinder the team's progress and performance\\n- Protect the team from external distractions and interferences\\n- Promote self-organization, collaboration, and empowerment within the team\\n- Foster a culture of continuous improvement and feedback\\n- Support the Product Owner in managing the product backlog and maximizing value\",\n        \"user_id\": 3,\n        \"date\": \"2012-07-23T22:14:45Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\subtle-cinematics-BulYN_Vs_dw-unsplash.jpg\"\n    },\n    {\n        \"id\": 48,\n        \"title\": \"How to use Cucumber for behavior-driven development\",\n        \"body\": \"Cucumber is a tool that supports behavior-driven development (BDD), a software development approach that focuses on the behavior and outcomes of the software. Cucumber allows writing executable specifications in a natural language called Gherkin. Gherkin uses a format of Given-When-Then to describe scenarios. To use Cucumber for BDD, you need to:\\n- Write feature files that contain scenarios in Gherkin\\n- Write step definitions that map the steps to the code\\n- Run the feature files and verify the results\",\n        \"user_id\": 1,\n        \"date\": \"2021-11-27T16:47:58Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 49,\n        \"title\": \"The principles of agile software development\",\n        \"body\": \"Agile software development is based on four core values and twelve principles that guide the way software is developed and delivered. The four core values are:\\n- Individuals and interactions over processes and tools\\n- Working software over comprehensive documentation\\n- Customer collaboration over contract negotiation\\n- Responding to change over following a plan.\\n\\nThe twelve principles are:\\n- Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\\n- Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\\n- Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\\n- Business people and developers must work together daily throughout the project.\\n- Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\\n- The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\\n- Working software is the primary measure of progress.\\n- Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\\n- Continuous attention to technical excellence and good design enhances agility.\\n- Simplicity--the art of maximizing the amount of work not done--is essential.\",\n        \"user_id\": 2,\n        \"date\": \"2017-11-23T21:05:04Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\manson-yim-hogOq7t6dVQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 50,\n        \"title\": \"How to use JMeter for performance testing\",\n        \"body\": \"JMeter is a powerful open-source tool for testing the performance of web applications. JMeter can be used to simulate various load scenarios, measure response times, throughput, errors, etc., and generate reports and graphs. To use JMeter for performance testing, you need to:\\n- Install JMeter and configure it according to your needs\\n- Create a test plan that defines the test objectives, parameters, logic, etc.\\n- Add thread groups that represent the number of users or requests\\n- Add samplers that send requests to the target server\\n- Add listeners that collect and display the test results\",\n        \"user_id\": 5,\n        \"date\": \"2014-07-27T18:03:46Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    },\n    {\n        \"id\": 51,\n        \"title\": \"The difference between Scrum and Kanban\",\n        \"body\": \"Scrum and Kanban are two agile methods that share some common principles and practices, such as iterative and incremental delivery, visualization of work, and collaboration among team members. However, they also have some key differences, such as:\\n- Scrum uses fixed-length sprints, while Kanban uses a continuous flow of work\\n- Scrum prescribes roles, events, artifacts, and rules, while Kanban is more flexible and adaptable\\n- Scrum limits work in progress (WIP) by sprint capacity, while Kanban limits WIP by column or lane\\n- Scrum focuses on delivering potentially shippable increments of value, while Kanban focuses on optimizing the flow of value\",\n        \"user_id\": 3,\n        \"date\": \"2012-02-04T04:14:46Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\andrew-svk-nQvFebPtqbw-unsplash.jpg\"\n    },\n    {\n        \"id\": 52,\n        \"title\": \"What is continuous testing?\",\n        \"body\": \"Continuous testing is a software testing practice that involves testing code continuously throughout the software development life cycle. Continuous testing helps ensure that the code meets the quality standards and requirements at every stage of development. Continuous testing also enables faster feedback and delivery of value to the customer. To implement continuous testing, you need to: \\n- Integrate testing into the CI/CD pipeline\\n- Use automation tools and frameworks to execute tests \\n- Perform different types of tests, such as unit, integration, functional, performance, etc.\\n- Monitor and analyze the test results and metrics\",\n        \"user_id\": 3,\n        \"date\": \"2015-12-30T16:13:43Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\saud-edum-HkSI9h3KFn0-unsplash.jpg\"\n    },\n    {\n        \"id\": 53,\n        \"title\": \"How to write a good bug report\",\n        \"body\": \"A bug report is a document that describes a defect or error in a software product. A good bug report can help developers identify and fix the problem quickly and efficiently. Here are some tips for writing a good bug report:\\n- Use a clear and descriptive title\\n- Include the steps to reproduce the bug\\n- Provide the expected and actual results\\n- Attach screenshots, videos, logs, or other relevant information\\n- Specify the environment and version of the software\\n- Assign a priority and severity level to the bug\",\n        \"user_id\": 4,\n        \"date\": \"2020-09-26T08:38:47Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\pietro-de-grandi-Rz-d5XxRsgI-unsplash.jpg\"\n    },\n    {\n        \"id\": 54,\n        \"title\": \"The benefits of Scrum methodology\",\n        \"body\": \"Scrum is an agile framework that organizes software development into short iterations called sprints. Scrum uses roles, events, artifacts, and rules to guide the team and deliver value to the customer. Some of the benefits of Scrum are:\\n- Increased transparency and visibility of the project status\\n- Improved communication and collaboration among the team members\\n- Enhanced adaptability and flexibility to changing requirements\\n- Reduced waste and risk of failure\\n- Higher customer satisfaction and trust\",\n        \"user_id\": 9,\n        \"date\": \"2013-03-05T20:29:48Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sharon-mccutcheon--8a5eJ1-mmQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 55,\n        \"title\": \"What is continuous integration?\",\n        \"body\": \"Continuous integration (CI) is a software development practice that involves building and testing code frequently and automatically. CI helps detect and fix errors early in the development cycle, improving the quality and reliability of the code. CI also enables faster feedback and collaboration among developers. To implement CI, you need to:\\n- Use a version control system to manage your code\\n- Use a CI server or tool to automate the build and test process\\n- Write unit tests and code coverage tools to verify your code\\n- Follow a coding standard and style guide\",\n        \"user_id\": 8,\n        \"date\": \"2016-04-25T14:38:34Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\joseph-chan-Es0eirjyQPQ-unsplash.jpg\"\n    },\n    {\n        \"id\": 56,\n        \"title\": \"What is test-driven development?\",\n        \"body\": \"Test-driven development (TDD) is a software development technique that involves writing tests before writing code. TDD follows a cycle of three steps:\\n- Write a failing test for a feature or functionality\\n- Write the minimum amount of code to make the test pass\\n- Refactor the code to improve its quality and readability TDD helps developers create clean, robust, and reliable code that meets the requirements. TDD also helps developers avoid over-engineering or under-engineering their solutions.\",\n        \"user_id\": 4,\n        \"date\": \"2013-06-21T13:18:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 57,\n        \"title\": \"Myth: Testing is only for finding bugs\",\n        \"body\": \"This is a common myth that assumes that testing is only a negative activity that aims to find faults or errors in the software. However, testing is much more than that. Testing is also a positive activity that aims to verify and validate the functionality, performance, usability, security, etc., of the software. Testing can also help improve the design and structure of the code, facilitate refactoring and maintenance of the code, support documentation and knowledge sharing of the code, enhance customer satisfaction and trust, reduce development and maintenance costs, comply with standards and regulations, etc.\",\n        \"user_id\": 10,\n        \"date\": \"2023-04-18T13:18:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\claudio-schwarz-yJzo1QIl9ug-unsplash.jpg\"\n    },\n    {\n        \"id\": 58,\n        \"title\": \"Myth: Testing can be done by anyone\",\n        \"body\": \"This is a common myth that assumes that testing is an easy and simple activity that does not require any skills or expertise. However, testing is a complex and challenging activity that requires a combination of technical and soft skills. Some of the skills required for testing are:\\n- Analytical and logical thinking: to understand the requirements and design test cases that cover all scenarios\\n- Attention to detail: to identify and report defects or errors accurately\\n- Communication and collaboration: to interact with developers, stakeholders, customers, etc., clearly and respectfully\\n- Curiosity and creativity: to explore and test the software from different perspectives and find new ways to break it\\n- Learning and adaptability: to keep up with new technologies, tools, methodologies, etc., and adjust to changing situations\",\n        \"user_id\": 10,\n        \"date\": \"2023-02-18T11:13:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\jeremy-hynes-HxxNVun8HEc-unsplash.jpg\"\n    },\n    {\n        \"id\": 59,\n        \"title\": \"Myth: Testing is only done at the end of development\",\n        \"body\": \"This is a common myth that assumes that testing is only a final activity that occurs after the development is completed. However, testing is an ongoing activity that occurs throughout the software development life cycle. Testing can be done at different levels, such as unit testing, integration testing, system testing, acceptance testing, etc. Testing can also be done at different stages, such as planning, design, implementation, deployment, etc. Testing can also be done in different ways, such as static testing, dynamic testing, manual testing, automated testing, etc.\",\n        \"user_id\": 10,\n        \"date\": \"2022-12-24T11:13:57Z\",\n        \"image\": \".\\\\data\\\\images\\\\256\\\\sid-balachandran-bG4IyV4eH0Q-unsplash.jpg\"\n    }\n]"
								}
							]
						}
					],
					"id": "ccf7b9fd-f132-46c0-96b8-d272e9565ce1"
				},
				{
					"name": "Add article - positive",
					"item": [
						{
							"name": "Add article",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3d5651b8-a561-46bf-9476-a8833ae773f4",
										"exec": [
											"const moment = require('moment');\r",
											"const baseURL = pm.variables.get(\"baseUrl\");\r",
											"var token = pm.variables.get(\"token\");\r",
											"const login = pm.environment.get(\"login\");\r",
											"const password = pm.environment.get(\"password\");\r",
											"var tokenGenerationMoment = pm.environment.get(\"token_generation_moment\");\r",
											"\r",
											"var isTokenExpired = moment(tokenGenerationMoment).isBefore(moment().subtract(59, 'minute'));\r",
											"\r",
											"if (!token || isTokenExpired) {\r",
											"    console.info(\"Acces token is empty or expired. Getting new token...\")\r",
											"\r",
											"    const options =\r",
											"    {\r",
											"        url: baseURL + \"/login\",\r",
											"        method: 'POST',\r",
											"        header: { 'content-type': 'application/json', 'accept': 'application/json' },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(\r",
											"                {\r",
											"                    \"email\": login,\r",
											"                    \"password\": password\r",
											"                }\r",
											"            )\r",
											"        }\r",
											"    };\r",
											"\r",
											"    pm.sendRequest(options, function (err, res) {\r",
											"        if (err) {\r",
											"            console.log(err);\r",
											"        }\r",
											"        else {\r",
											"            var jsonData = res.json();\r",
											"            pm.environment.set(\"token\", jsonData.access_token);\r",
											"            pm.environment.set(\"token_generation_moment\", moment());\r",
											"        }\r",
											"    });\r",
											"\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68077dc7-2ea2-430f-ae38-075e7b13ee15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/articles"
							},
							"response": [
								{
									"id": "966d5514-972f-45e1-9514-73c424f35e85",
									"name": "Article created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/articles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"id\": \"<integer>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"id": "21def979-f570-40ba-8a8a-6aefc602de87",
									"name": "Bad request - malformed JSON",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/articles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "8c9905ba-e1bc-4bde-99db-2a6db0b811fd",
									"name": "Invalid article supplied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"body\": \"<string>\",\n  \"date\": \"<date>\",\n  \"image\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/articles"
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "1e50eb85-6658-423b-b3cf-06736a0fdbb4"
				},
				{
					"name": "Get articles with query Copy",
					"id": "d1cd8e7c-e23c-4cee-83a0-e878e6fdc184",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/articles?&q=<string>&id=<integer>&user_id=<integer>&date=<string>&_sort=<string>&_order=<string>&_limit=<integer>&_page=<integer>&_start=<integer>&_end=<integer>&_embed=<string>&_expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "",
									"value": null
								},
								{
									"description": "Free search articles.",
									"key": "q",
									"value": "<string>"
								},
								{
									"description": "Id of article.",
									"key": "id",
									"value": "<integer>"
								},
								{
									"description": "Id of user, creator of article.",
									"key": "user_id",
									"value": "<integer>"
								},
								{
									"description": "Date of article creation.",
									"key": "date",
									"value": "<string>"
								},
								{
									"description": "Sort with given attribute (user_id, title, id), use it with _order.",
									"key": "_sort",
									"value": "<string>"
								},
								{
									"description": "Order default ascending (asc) for descending use desc.",
									"key": "_order",
									"value": "<string>"
								},
								{
									"description": "Limit returned items. By default empty limit is 10.",
									"key": "_limit",
									"value": "<integer>"
								},
								{
									"description": "Page number when using _limit.",
									"key": "_page",
									"value": "<integer>"
								},
								{
									"description": "How many items should be skipped.",
									"key": "_start",
									"value": "<integer>"
								},
								{
									"description": "How many to show after _start.",
									"key": "_end",
									"value": "<integer>"
								},
								{
									"description": "Embed depending objects (comments).",
									"key": "_embed",
									"value": "<string>"
								},
								{
									"description": "Expand depending objects (user).",
									"key": "_expand",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "943763cb-32c8-40e8-b735-4f84e8a7a702",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/articles?q=<string>&id=<integer>&user_id=<integer>&date=<string>&_sort=<string>&_order=<string>&_limit=<integer>&_page=<integer>&_start=<integer>&_end=<integer>&_embed=<string>&_expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									],
									"query": [
										{
											"description": "Free search articles.",
											"key": "q",
											"value": "<string>"
										},
										{
											"description": "Id of article.",
											"key": "id",
											"value": "<integer>"
										},
										{
											"description": "Id of user, creator of article.",
											"key": "user_id",
											"value": "<integer>"
										},
										{
											"description": "Date of article creation.",
											"key": "date",
											"value": "<string>"
										},
										{
											"description": "Sort with given attribute (user_id, title, id), use it with _order.",
											"key": "_sort",
											"value": "<string>"
										},
										{
											"description": "Order default ascending (asc) for descending use desc.",
											"key": "_order",
											"value": "<string>"
										},
										{
											"description": "Limit returned items. By default empty limit is 10.",
											"key": "_limit",
											"value": "<integer>"
										},
										{
											"description": "Page number when using _limit.",
											"key": "_page",
											"value": "<integer>"
										},
										{
											"description": "How many items should be skipped.",
											"key": "_start",
											"value": "<integer>"
										},
										{
											"description": "How many to show after _start.",
											"key": "_end",
											"value": "<integer>"
										},
										{
											"description": "Embed depending objects (comments).",
											"key": "_embed",
											"value": "<string>"
										},
										{
											"description": "Expand depending objects (user).",
											"key": "_expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"user_id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"body\": \"<string>\",\n    \"date\": \"<date>\",\n    \"id\": \"<integer>\",\n    \"image\": \"<string>\"\n  },\n  {\n    \"user_id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"body\": \"<string>\",\n    \"date\": \"<date>\",\n    \"id\": \"<integer>\",\n    \"image\": \"<string>\"\n  }\n]"
						}
					]
				}
			],
			"id": "8d134fbf-e17c-403a-aaa0-623acecbb402"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "794e23d9-5adc-45f1-be38-abeb6d4b2f7c",
				"type": "text/javascript",
				"exec": [
					"console.info('Running request: ' + pm.info.requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f76ddd59-c1b7-49d6-8232-f6650a241049",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}